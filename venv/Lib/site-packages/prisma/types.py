# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from . import _types
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = _types.SortMode
SortOrder = _types.SortOrder

MetricsFormat = _types.MetricsFormat

DatasourceOverride = _types.DatasourceOverride
HttpConfig = _types.HttpConfig


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
        'search': str,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
        'search': str,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]


# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    id: _str
    name: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    accounts: 'AccountCreateManyNestedWithoutRelationsInput'
    sessions: 'SessionCreateManyNestedWithoutRelationsInput'
    Authenticator: 'AuthenticatorCreateManyNestedWithoutRelationsInput'
    configurations: 'ConfigurationCreateManyNestedWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""
    email: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    id: _str
    name: Optional[_str]
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""
    email: _str

class UserConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'UserCreateWithoutRelationsInput'
    where: 'UserWhereUniqueInput'

class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]
    connect_or_create: Union['UserConnectOrCreateWithoutRelationsInput', List['UserConnectOrCreateWithoutRelationsInput']]

_UserWhereUnique_id_Input = TypedDict(
    '_UserWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_UserWhereUnique_email_Input = TypedDict(
    '_UserWhereUnique_email_Input',
    {
        'email': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_id_Input',
    '_UserWhereUnique_email_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: Optional[_str]
    email: _str
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    accounts: 'AccountUpdateManyWithoutRelationsInput'
    sessions: 'SessionUpdateManyWithoutRelationsInput'
    Authenticator: 'AuthenticatorUpdateManyWithoutRelationsInput'
    configurations: 'ConfigurationUpdateManyWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: Optional[_str]
    email: _str
    emailVerified: Optional[datetime.datetime]
    image: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    connect_or_create: List['UserConnectOrCreateWithoutRelationsInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    connect_or_create: 'UserConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_id_OrderByInput = TypedDict(
    '_User_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_User_name_OrderByInput = TypedDict(
    '_User_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_User_email_OrderByInput = TypedDict(
    '_User_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_User_emailVerified_OrderByInput = TypedDict(
    '_User_emailVerified_OrderByInput',
    {
        'emailVerified': 'SortOrder',
    },
    total=True
)

_User_image_OrderByInput = TypedDict(
    '_User_image_OrderByInput',
    {
        'image': 'SortOrder',
    },
    total=True
)

_User_createdAt_OrderByInput = TypedDict(
    '_User_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_User_updatedAt_OrderByInput = TypedDict(
    '_User_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_User_RelevanceInner = TypedDict(
    '_User_RelevanceInner',
    {
        'fields': 'List[UserScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_User_RelevanceOrderByInput = TypedDict(
    '_User_RelevanceOrderByInput',
    {
        '_relevance': '_User_RelevanceInner',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_id_OrderByInput',
    '_User_name_OrderByInput',
    '_User_email_OrderByInput',
    '_User_emailVerified_OrderByInput',
    '_User_image_OrderByInput',
    '_User_createdAt_OrderByInput',
    '_User_updatedAt_OrderByInput',
    '_User_RelevanceOrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""
    accounts: Union[bool, 'FindManyAccountArgsFromUser']
    sessions: Union[bool, 'FindManySessionArgsFromUser']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromUser']
    configurations: Union[bool, 'FindManyConfigurationArgsFromUser']


    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromUserRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromUserRecursive1']


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromUserRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromUserRecursive2']


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromUserRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromUserRecursive3']


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    accounts: Union[bool, 'FindManyAccountArgsFromUserRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromUserRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromUserRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromUserRecursive4']


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class AccountIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class AccountIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class AccountIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class AccountIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AccountArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAccountArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class SessionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class SessionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class SessionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class SessionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class SessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManySessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class VerificationTokenIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class VerificationTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyVerificationTokenArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class AuthenticatorIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class AuthenticatorIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class AuthenticatorIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class AuthenticatorIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AuthenticatorArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAuthenticatorArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive1']


class ConfigurationIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive2']


class ConfigurationIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive3']


class ConfigurationIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    user: Union[bool, 'UserArgsFromUserRecursive4']


class ConfigurationIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ConfigurationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyConfigurationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromUserRecursive1']


class GeneratedFileIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromUserRecursive2']


class GeneratedFileIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromUserRecursive3']


class GeneratedFileIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromUserRecursive4']


class GeneratedFileIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class GeneratedFileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyGeneratedFileArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    template: Union[bool, 'GeneratedFileArgsFromUserRecursive1']


class GeneratedExcelIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    template: Union[bool, 'GeneratedFileArgsFromUserRecursive2']


class GeneratedExcelIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    template: Union[bool, 'GeneratedFileArgsFromUserRecursive3']


class GeneratedExcelIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    template: Union[bool, 'GeneratedFileArgsFromUserRecursive4']


class GeneratedExcelIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class GeneratedExcelArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyGeneratedExcelArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    Authenticator: 'AuthenticatorListRelationFilter'
    configurations: 'ConfigurationListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    Authenticator: 'AuthenticatorListRelationFilter'
    configurations: 'ConfigurationListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    Authenticator: 'AuthenticatorListRelationFilter'
    configurations: 'ConfigurationListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    Authenticator: 'AuthenticatorListRelationFilter'
    configurations: 'ConfigurationListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[None, _str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    emailVerified: Union[None, datetime.datetime, 'types.DateTimeFilter']
    image: Union[None, _str, 'types.StringFilter']
    accounts: 'AccountListRelationFilter'
    sessions: 'SessionListRelationFilter'
    Authenticator: 'AuthenticatorListRelationFilter'
    configurations: 'ConfigurationListRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    emailVerified: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    image: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    email: _str
    emailVerified: datetime.datetime
    image: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    id: _str
    name: _str
    email: _str
    emailVerified: datetime.datetime
    image: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    id: bool
    name: bool
    email: bool
    emailVerified: bool
    image: bool
    createdAt: bool
    updatedAt: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    id: bool
    name: bool
    email: bool
    emailVerified: bool
    image: bool
    createdAt: bool
    updatedAt: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'email': bool,
        'emailVerified': bool,
        'image': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'email': int,
        'emailVerified': int,
        'image': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'id',
    'name',
    'email',
    'emailVerified',
    'image',
    'accounts',
    'sessions',
    'Authenticator',
    'configurations',
    'createdAt',
    'updatedAt',
]
UserScalarFieldKeys = Literal[
    'id',
    'name',
    'email',
    'emailVerified',
    'image',
    'createdAt',
    'updatedAt',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = Literal[
        'accounts',
        'sessions',
        'Authenticator',
        'configurations',
    ]

# Account types

class AccountOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Account create method"""
    userId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[_int]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserCreateNestedWithoutRelationsInput'


class AccountCreateInput(AccountOptionalCreateInput):
    """Required arguments to the Account create method"""
    type: _str
    provider: _str
    providerAccountId: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AccountOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Account create method, without relations"""
    userId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[_int]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class AccountCreateWithoutRelationsInput(AccountOptionalCreateWithoutRelationsInput):
    """Required arguments to the Account create method, without relations"""
    type: _str
    provider: _str
    providerAccountId: _str

class AccountConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'AccountCreateWithoutRelationsInput'
    where: 'AccountWhereUniqueInput'

class AccountCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AccountCreateWithoutRelationsInput'
    connect: 'AccountWhereUniqueInput'
    connect_or_create: 'AccountConnectOrCreateWithoutRelationsInput'


class AccountCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AccountCreateWithoutRelationsInput', List['AccountCreateWithoutRelationsInput']]
    connect: Union['AccountWhereUniqueInput', List['AccountWhereUniqueInput']]
    connect_or_create: Union['AccountConnectOrCreateWithoutRelationsInput', List['AccountConnectOrCreateWithoutRelationsInput']]

_AccountCompoundPrimaryKeyInner = TypedDict(
    '_AccountCompoundPrimaryKeyInner',
    {
        'provider': '_str',
        'providerAccountId': '_str',
    },
    total=True
)

_AccountCompoundPrimaryKey = TypedDict(
    '_AccountCompoundPrimaryKey',
    {
        'provider_providerAccountId': '_AccountCompoundPrimaryKeyInner',
    },
    total=True
)

AccountWhereUniqueInput = _AccountCompoundPrimaryKey


class AccountUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[Union[AtomicIntInput, _int]]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'


class AccountUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: Optional[_str]
    access_token: Optional[_str]
    expires_at: Optional[Union[AtomicIntInput, _int]]
    token_type: Optional[_str]
    scope: Optional[_str]
    id_token: Optional[_str]
    session_state: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class AccountUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AccountCreateWithoutRelationsInput']
    connect: List['AccountWhereUniqueInput']
    connect_or_create: List['AccountConnectOrCreateWithoutRelationsInput']
    set: List['AccountWhereUniqueInput']
    disconnect: List['AccountWhereUniqueInput']
    delete: List['AccountWhereUniqueInput']

    # TODO
    # update: List['AccountUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AccountUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AccountScalarWhereInput']
    # upsert: List['AccountUpserteWithWhereUniqueWithoutRelationsInput']


class AccountUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AccountCreateWithoutRelationsInput'
    connect: 'AccountWhereUniqueInput'
    connect_or_create: 'AccountConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AccountUpdateInput'
    # upsert: 'AccountUpsertWithoutRelationsInput'


class AccountUpsertInput(TypedDict):
    create: 'AccountCreateInput'
    update: 'AccountUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Account_userId_OrderByInput = TypedDict(
    '_Account_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Account_type_OrderByInput = TypedDict(
    '_Account_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Account_provider_OrderByInput = TypedDict(
    '_Account_provider_OrderByInput',
    {
        'provider': 'SortOrder',
    },
    total=True
)

_Account_providerAccountId_OrderByInput = TypedDict(
    '_Account_providerAccountId_OrderByInput',
    {
        'providerAccountId': 'SortOrder',
    },
    total=True
)

_Account_refresh_token_OrderByInput = TypedDict(
    '_Account_refresh_token_OrderByInput',
    {
        'refresh_token': 'SortOrder',
    },
    total=True
)

_Account_access_token_OrderByInput = TypedDict(
    '_Account_access_token_OrderByInput',
    {
        'access_token': 'SortOrder',
    },
    total=True
)

_Account_expires_at_OrderByInput = TypedDict(
    '_Account_expires_at_OrderByInput',
    {
        'expires_at': 'SortOrder',
    },
    total=True
)

_Account_token_type_OrderByInput = TypedDict(
    '_Account_token_type_OrderByInput',
    {
        'token_type': 'SortOrder',
    },
    total=True
)

_Account_scope_OrderByInput = TypedDict(
    '_Account_scope_OrderByInput',
    {
        'scope': 'SortOrder',
    },
    total=True
)

_Account_id_token_OrderByInput = TypedDict(
    '_Account_id_token_OrderByInput',
    {
        'id_token': 'SortOrder',
    },
    total=True
)

_Account_session_state_OrderByInput = TypedDict(
    '_Account_session_state_OrderByInput',
    {
        'session_state': 'SortOrder',
    },
    total=True
)

_Account_createdAt_OrderByInput = TypedDict(
    '_Account_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Account_updatedAt_OrderByInput = TypedDict(
    '_Account_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Account_RelevanceInner = TypedDict(
    '_Account_RelevanceInner',
    {
        'fields': 'List[AccountScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Account_RelevanceOrderByInput = TypedDict(
    '_Account_RelevanceOrderByInput',
    {
        '_relevance': '_Account_RelevanceInner',
    },
    total=True
)

AccountOrderByInput = Union[
    '_Account_userId_OrderByInput',
    '_Account_type_OrderByInput',
    '_Account_provider_OrderByInput',
    '_Account_providerAccountId_OrderByInput',
    '_Account_refresh_token_OrderByInput',
    '_Account_access_token_OrderByInput',
    '_Account_expires_at_OrderByInput',
    '_Account_token_type_OrderByInput',
    '_Account_scope_OrderByInput',
    '_Account_id_token_OrderByInput',
    '_Account_session_state_OrderByInput',
    '_Account_createdAt_OrderByInput',
    '_Account_updatedAt_OrderByInput',
    '_Account_RelevanceOrderByInput',
]



# recursive Account types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AccountRelationFilter = TypedDict(
    'AccountRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AccountListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AccountInclude(TypedDict, total=False):
    """Account relational arguments"""
    user: Union[bool, 'UserArgsFromAccount']


    

class UserIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAccountRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAccountRecursive1']


class UserIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAccountRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAccountRecursive2']


class UserIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAccountRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAccountRecursive3']


class UserIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    accounts: Union[bool, 'FindManyAccountArgsFromAccountRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromAccountRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAccountRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAccountRecursive4']


class UserIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class UserArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyUserArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class AccountIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class AccountIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class AccountIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class AccountIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class AccountArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyAccountArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class SessionIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class SessionIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class SessionIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class SessionIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class SessionArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManySessionArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""


class VerificationTokenIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class VerificationTokenArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyVerificationTokenArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class AuthenticatorIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class AuthenticatorIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class AuthenticatorIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class AuthenticatorIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class AuthenticatorArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyAuthenticatorArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive1']


class ConfigurationIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive2']


class ConfigurationIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive3']


class ConfigurationIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    user: Union[bool, 'UserArgsFromAccountRecursive4']


class ConfigurationIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class ConfigurationArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyConfigurationArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAccountRecursive1']


class GeneratedFileIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAccountRecursive2']


class GeneratedFileIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAccountRecursive3']


class GeneratedFileIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAccountRecursive4']


class GeneratedFileIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class GeneratedFileArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyGeneratedFileArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromAccount(TypedDict, total=False):
    """Relational arguments for Account"""
    template: Union[bool, 'GeneratedFileArgsFromAccountRecursive1']


class GeneratedExcelIncludeFromAccountRecursive1(TypedDict, total=False):
    """Relational arguments for Account"""
    template: Union[bool, 'GeneratedFileArgsFromAccountRecursive2']


class GeneratedExcelIncludeFromAccountRecursive2(TypedDict, total=False):
    """Relational arguments for Account"""
    template: Union[bool, 'GeneratedFileArgsFromAccountRecursive3']


class GeneratedExcelIncludeFromAccountRecursive3(TypedDict, total=False):
    """Relational arguments for Account"""
    template: Union[bool, 'GeneratedFileArgsFromAccountRecursive4']


class GeneratedExcelIncludeFromAccountRecursive4(TypedDict, total=False):
    """Relational arguments for Account"""

    

class GeneratedExcelArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    
    

class FindManyGeneratedExcelArgsFromAccount(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromAccountRecursive1(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromAccountRecursive2(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromAccountRecursive3(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromAccountRecursive4(TypedDict, total=False):
    """Arguments for Account"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyAccountArgs = FindManyAccountArgsFromAccount
FindFirstAccountArgs = FindManyAccountArgsFromAccount


    

class AccountWhereInput(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive1', List['AccountWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive1']
    OR: List['AccountWhereInputRecursive1']
    NOT: List['AccountWhereInputRecursive1']


class AccountWhereInputRecursive1(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive2', List['AccountWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive2']
    OR: List['AccountWhereInputRecursive2']
    NOT: List['AccountWhereInputRecursive2']


class AccountWhereInputRecursive2(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive3', List['AccountWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive3']
    OR: List['AccountWhereInputRecursive3']
    NOT: List['AccountWhereInputRecursive3']


class AccountWhereInputRecursive3(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AccountWhereInputRecursive4', List['AccountWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AccountWhereInputRecursive4']
    OR: List['AccountWhereInputRecursive4']
    NOT: List['AccountWhereInputRecursive4']


class AccountWhereInputRecursive4(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringFilter']
    type: Union[_str, 'types.StringFilter']
    provider: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    refresh_token: Union[None, _str, 'types.StringFilter']
    access_token: Union[None, _str, 'types.StringFilter']
    expires_at: Union[None, _int, 'types.IntFilter']
    token_type: Union[None, _str, 'types.StringFilter']
    scope: Union[None, _str, 'types.StringFilter']
    id_token: Union[None, _str, 'types.StringFilter']
    session_state: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'



# aggregate Account types


    

class AccountScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive1']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive1']


class AccountScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive2']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive2']


class AccountScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive3']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive3']


class AccountScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AccountScalarWhereWithAggregatesInputRecursive4']
    OR: List['AccountScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AccountScalarWhereWithAggregatesInputRecursive4']


class AccountScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Account arguments for searching"""
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    type: Union[_str, 'types.StringWithAggregatesFilter']
    provider: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    refresh_token: Union[_str, 'types.StringWithAggregatesFilter']
    access_token: Union[_str, 'types.StringWithAggregatesFilter']
    expires_at: Union[_int, 'types.IntWithAggregatesFilter']
    token_type: Union[_str, 'types.StringWithAggregatesFilter']
    scope: Union[_str, 'types.StringWithAggregatesFilter']
    id_token: Union[_str, 'types.StringWithAggregatesFilter']
    session_state: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class AccountGroupByOutput(TypedDict, total=False):
    userId: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: _str
    access_token: _str
    expires_at: _int
    token_type: _str
    scope: _str
    id_token: _str
    session_state: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'AccountSumAggregateOutput'
    _avg: 'AccountAvgAggregateOutput'
    _min: 'AccountMinAggregateOutput'
    _max: 'AccountMaxAggregateOutput'
    _count: 'AccountCountAggregateOutput'


class AccountAvgAggregateOutput(TypedDict, total=False):
    """Account output for aggregating averages"""
    expires_at: float


class AccountSumAggregateOutput(TypedDict, total=False):
    """Account output for aggregating sums"""
    expires_at: _int


class AccountScalarAggregateOutput(TypedDict, total=False):
    """Account output including scalar fields"""
    userId: _str
    type: _str
    provider: _str
    providerAccountId: _str
    refresh_token: _str
    access_token: _str
    expires_at: _int
    token_type: _str
    scope: _str
    id_token: _str
    session_state: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


AccountMinAggregateOutput = AccountScalarAggregateOutput
AccountMaxAggregateOutput = AccountScalarAggregateOutput


class AccountMaxAggregateInput(TypedDict, total=False):
    """Account input for aggregating by max"""
    userId: bool
    type: bool
    provider: bool
    providerAccountId: bool
    refresh_token: bool
    access_token: bool
    expires_at: bool
    token_type: bool
    scope: bool
    id_token: bool
    session_state: bool
    createdAt: bool
    updatedAt: bool


class AccountMinAggregateInput(TypedDict, total=False):
    """Account input for aggregating by min"""
    userId: bool
    type: bool
    provider: bool
    providerAccountId: bool
    refresh_token: bool
    access_token: bool
    expires_at: bool
    token_type: bool
    scope: bool
    id_token: bool
    session_state: bool
    createdAt: bool
    updatedAt: bool


class AccountNumberAggregateInput(TypedDict, total=False):
    """Account input for aggregating numbers"""
    expires_at: bool


AccountAvgAggregateInput = AccountNumberAggregateInput
AccountSumAggregateInput = AccountNumberAggregateInput


AccountCountAggregateInput = TypedDict(
    'AccountCountAggregateInput',
    {
        'userId': bool,
        'type': bool,
        'provider': bool,
        'providerAccountId': bool,
        'refresh_token': bool,
        'access_token': bool,
        'expires_at': bool,
        'token_type': bool,
        'scope': bool,
        'id_token': bool,
        'session_state': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

AccountCountAggregateOutput = TypedDict(
    'AccountCountAggregateOutput',
    {
        'userId': int,
        'type': int,
        'provider': int,
        'providerAccountId': int,
        'refresh_token': int,
        'access_token': int,
        'expires_at': int,
        'token_type': int,
        'scope': int,
        'id_token': int,
        'session_state': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


AccountKeys = Literal[
    'userId',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
    'user',
]
AccountScalarFieldKeys = Literal[
    'userId',
    'type',
    'provider',
    'providerAccountId',
    'refresh_token',
    'access_token',
    'expires_at',
    'token_type',
    'scope',
    'id_token',
    'session_state',
    'createdAt',
    'updatedAt',
]
AccountScalarFieldKeysT = TypeVar('AccountScalarFieldKeysT', bound=AccountScalarFieldKeys)

AccountRelationalFieldKeys = Literal[
        'user',
    ]

# Session types

class SessionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Session create method"""
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SessionCreateInput(SessionOptionalCreateInput):
    """Required arguments to the Session create method"""
    sessionToken: _str
    expires: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class SessionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Session create method, without relations"""
    userId: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SessionCreateWithoutRelationsInput(SessionOptionalCreateWithoutRelationsInput):
    """Required arguments to the Session create method, without relations"""
    sessionToken: _str
    expires: datetime.datetime

class SessionConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'SessionCreateWithoutRelationsInput'
    where: 'SessionWhereUniqueInput'

class SessionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'SessionCreateWithoutRelationsInput'
    connect: 'SessionWhereUniqueInput'
    connect_or_create: 'SessionConnectOrCreateWithoutRelationsInput'


class SessionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['SessionCreateWithoutRelationsInput', List['SessionCreateWithoutRelationsInput']]
    connect: Union['SessionWhereUniqueInput', List['SessionWhereUniqueInput']]
    connect_or_create: Union['SessionConnectOrCreateWithoutRelationsInput', List['SessionConnectOrCreateWithoutRelationsInput']]

_SessionWhereUnique_sessionToken_Input = TypedDict(
    '_SessionWhereUnique_sessionToken_Input',
    {
        'sessionToken': '_str',
    },
    total=True
)

SessionWhereUniqueInput = _SessionWhereUnique_sessionToken_Input


class SessionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    sessionToken: _str
    expires: datetime.datetime
    user: 'UserUpdateOneWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SessionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    sessionToken: _str
    expires: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SessionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['SessionCreateWithoutRelationsInput']
    connect: List['SessionWhereUniqueInput']
    connect_or_create: List['SessionConnectOrCreateWithoutRelationsInput']
    set: List['SessionWhereUniqueInput']
    disconnect: List['SessionWhereUniqueInput']
    delete: List['SessionWhereUniqueInput']

    # TODO
    # update: List['SessionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['SessionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['SessionScalarWhereInput']
    # upsert: List['SessionUpserteWithWhereUniqueWithoutRelationsInput']


class SessionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'SessionCreateWithoutRelationsInput'
    connect: 'SessionWhereUniqueInput'
    connect_or_create: 'SessionConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'SessionUpdateInput'
    # upsert: 'SessionUpsertWithoutRelationsInput'


class SessionUpsertInput(TypedDict):
    create: 'SessionCreateInput'
    update: 'SessionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Session_sessionToken_OrderByInput = TypedDict(
    '_Session_sessionToken_OrderByInput',
    {
        'sessionToken': 'SortOrder',
    },
    total=True
)

_Session_userId_OrderByInput = TypedDict(
    '_Session_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Session_expires_OrderByInput = TypedDict(
    '_Session_expires_OrderByInput',
    {
        'expires': 'SortOrder',
    },
    total=True
)

_Session_createdAt_OrderByInput = TypedDict(
    '_Session_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Session_updatedAt_OrderByInput = TypedDict(
    '_Session_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Session_RelevanceInner = TypedDict(
    '_Session_RelevanceInner',
    {
        'fields': 'List[SessionScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Session_RelevanceOrderByInput = TypedDict(
    '_Session_RelevanceOrderByInput',
    {
        '_relevance': '_Session_RelevanceInner',
    },
    total=True
)

SessionOrderByInput = Union[
    '_Session_sessionToken_OrderByInput',
    '_Session_userId_OrderByInput',
    '_Session_expires_OrderByInput',
    '_Session_createdAt_OrderByInput',
    '_Session_updatedAt_OrderByInput',
    '_Session_RelevanceOrderByInput',
]



# recursive Session types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

SessionRelationFilter = TypedDict(
    'SessionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class SessionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class SessionInclude(TypedDict, total=False):
    """Session relational arguments"""
    user: Union[bool, 'UserArgsFromSession']


    

class UserIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromSessionRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromSessionRecursive1']


class UserIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromSessionRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromSessionRecursive2']


class UserIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromSessionRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromSessionRecursive3']


class UserIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    accounts: Union[bool, 'FindManyAccountArgsFromSessionRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromSessionRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromSessionRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromSessionRecursive4']


class UserIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class UserArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyUserArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class AccountIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class AccountIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class AccountIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class AccountIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class AccountArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyAccountArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class SessionIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class SessionIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class SessionIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class SessionIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class SessionArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManySessionArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""


class VerificationTokenIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class VerificationTokenArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyVerificationTokenArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class AuthenticatorIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class AuthenticatorIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class AuthenticatorIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class AuthenticatorIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class AuthenticatorArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyAuthenticatorArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive1']


class ConfigurationIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive2']


class ConfigurationIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive3']


class ConfigurationIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    user: Union[bool, 'UserArgsFromSessionRecursive4']


class ConfigurationIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class ConfigurationArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyConfigurationArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromSessionRecursive1']


class GeneratedFileIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromSessionRecursive2']


class GeneratedFileIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromSessionRecursive3']


class GeneratedFileIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromSessionRecursive4']


class GeneratedFileIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class GeneratedFileArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyGeneratedFileArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromSession(TypedDict, total=False):
    """Relational arguments for Session"""
    template: Union[bool, 'GeneratedFileArgsFromSessionRecursive1']


class GeneratedExcelIncludeFromSessionRecursive1(TypedDict, total=False):
    """Relational arguments for Session"""
    template: Union[bool, 'GeneratedFileArgsFromSessionRecursive2']


class GeneratedExcelIncludeFromSessionRecursive2(TypedDict, total=False):
    """Relational arguments for Session"""
    template: Union[bool, 'GeneratedFileArgsFromSessionRecursive3']


class GeneratedExcelIncludeFromSessionRecursive3(TypedDict, total=False):
    """Relational arguments for Session"""
    template: Union[bool, 'GeneratedFileArgsFromSessionRecursive4']


class GeneratedExcelIncludeFromSessionRecursive4(TypedDict, total=False):
    """Relational arguments for Session"""

    

class GeneratedExcelArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    
    

class FindManyGeneratedExcelArgsFromSession(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromSessionRecursive1(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromSessionRecursive2(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromSessionRecursive3(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromSessionRecursive4(TypedDict, total=False):
    """Arguments for Session"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManySessionArgs = FindManySessionArgsFromSession
FindFirstSessionArgs = FindManySessionArgsFromSession


    

class SessionWhereInput(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive1', List['SessionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive1']
    OR: List['SessionWhereInputRecursive1']
    NOT: List['SessionWhereInputRecursive1']


class SessionWhereInputRecursive1(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive2', List['SessionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive2']
    OR: List['SessionWhereInputRecursive2']
    NOT: List['SessionWhereInputRecursive2']


class SessionWhereInputRecursive2(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive3', List['SessionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive3']
    OR: List['SessionWhereInputRecursive3']
    NOT: List['SessionWhereInputRecursive3']


class SessionWhereInputRecursive3(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SessionWhereInputRecursive4', List['SessionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['SessionWhereInputRecursive4']
    OR: List['SessionWhereInputRecursive4']
    NOT: List['SessionWhereInputRecursive4']


class SessionWhereInputRecursive4(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']
    user: 'UserRelationFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate Session types


    

class SessionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive1']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive1']


class SessionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive2']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive2']


class SessionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive3']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive3']


class SessionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SessionScalarWhereWithAggregatesInputRecursive4']
    OR: List['SessionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['SessionScalarWhereWithAggregatesInputRecursive4']


class SessionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Session arguments for searching"""
    sessionToken: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class SessionGroupByOutput(TypedDict, total=False):
    sessionToken: _str
    userId: _str
    expires: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'SessionSumAggregateOutput'
    _avg: 'SessionAvgAggregateOutput'
    _min: 'SessionMinAggregateOutput'
    _max: 'SessionMaxAggregateOutput'
    _count: 'SessionCountAggregateOutput'


class SessionAvgAggregateOutput(TypedDict, total=False):
    """Session output for aggregating averages"""


class SessionSumAggregateOutput(TypedDict, total=False):
    """Session output for aggregating sums"""


class SessionScalarAggregateOutput(TypedDict, total=False):
    """Session output including scalar fields"""
    sessionToken: _str
    userId: _str
    expires: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


SessionMinAggregateOutput = SessionScalarAggregateOutput
SessionMaxAggregateOutput = SessionScalarAggregateOutput


class SessionMaxAggregateInput(TypedDict, total=False):
    """Session input for aggregating by max"""
    sessionToken: bool
    userId: bool
    expires: bool
    createdAt: bool
    updatedAt: bool


class SessionMinAggregateInput(TypedDict, total=False):
    """Session input for aggregating by min"""
    sessionToken: bool
    userId: bool
    expires: bool
    createdAt: bool
    updatedAt: bool


class SessionNumberAggregateInput(TypedDict, total=False):
    """Session input for aggregating numbers"""


SessionAvgAggregateInput = SessionNumberAggregateInput
SessionSumAggregateInput = SessionNumberAggregateInput


SessionCountAggregateInput = TypedDict(
    'SessionCountAggregateInput',
    {
        'sessionToken': bool,
        'userId': bool,
        'expires': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

SessionCountAggregateOutput = TypedDict(
    'SessionCountAggregateOutput',
    {
        'sessionToken': int,
        'userId': int,
        'expires': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


SessionKeys = Literal[
    'sessionToken',
    'userId',
    'expires',
    'user',
    'createdAt',
    'updatedAt',
]
SessionScalarFieldKeys = Literal[
    'sessionToken',
    'userId',
    'expires',
    'createdAt',
    'updatedAt',
]
SessionScalarFieldKeysT = TypeVar('SessionScalarFieldKeysT', bound=SessionScalarFieldKeys)

SessionRelationalFieldKeys = Literal[
        'user',
    ]

# VerificationToken types

class VerificationTokenOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the VerificationToken create method"""


class VerificationTokenCreateInput(VerificationTokenOptionalCreateInput):
    """Required arguments to the VerificationToken create method"""
    identifier: _str
    token: _str
    expires: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class VerificationTokenOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the VerificationToken create method, without relations"""


class VerificationTokenCreateWithoutRelationsInput(VerificationTokenOptionalCreateWithoutRelationsInput):
    """Required arguments to the VerificationToken create method, without relations"""
    identifier: _str
    token: _str
    expires: datetime.datetime

class VerificationTokenConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'VerificationTokenCreateWithoutRelationsInput'
    where: 'VerificationTokenWhereUniqueInput'

class VerificationTokenCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'VerificationTokenCreateWithoutRelationsInput'
    connect: 'VerificationTokenWhereUniqueInput'
    connect_or_create: 'VerificationTokenConnectOrCreateWithoutRelationsInput'


class VerificationTokenCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['VerificationTokenCreateWithoutRelationsInput', List['VerificationTokenCreateWithoutRelationsInput']]
    connect: Union['VerificationTokenWhereUniqueInput', List['VerificationTokenWhereUniqueInput']]
    connect_or_create: Union['VerificationTokenConnectOrCreateWithoutRelationsInput', List['VerificationTokenConnectOrCreateWithoutRelationsInput']]

_VerificationTokenCompoundPrimaryKeyInner = TypedDict(
    '_VerificationTokenCompoundPrimaryKeyInner',
    {
        'identifier': '_str',
        'token': '_str',
    },
    total=True
)

_VerificationTokenCompoundPrimaryKey = TypedDict(
    '_VerificationTokenCompoundPrimaryKey',
    {
        'identifier_token': '_VerificationTokenCompoundPrimaryKeyInner',
    },
    total=True
)

VerificationTokenWhereUniqueInput = _VerificationTokenCompoundPrimaryKey


class VerificationTokenUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    identifier: _str
    token: _str
    expires: datetime.datetime


class VerificationTokenUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    identifier: _str
    token: _str
    expires: datetime.datetime


class VerificationTokenUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['VerificationTokenCreateWithoutRelationsInput']
    connect: List['VerificationTokenWhereUniqueInput']
    connect_or_create: List['VerificationTokenConnectOrCreateWithoutRelationsInput']
    set: List['VerificationTokenWhereUniqueInput']
    disconnect: List['VerificationTokenWhereUniqueInput']
    delete: List['VerificationTokenWhereUniqueInput']

    # TODO
    # update: List['VerificationTokenUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['VerificationTokenUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['VerificationTokenScalarWhereInput']
    # upsert: List['VerificationTokenUpserteWithWhereUniqueWithoutRelationsInput']


class VerificationTokenUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'VerificationTokenCreateWithoutRelationsInput'
    connect: 'VerificationTokenWhereUniqueInput'
    connect_or_create: 'VerificationTokenConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'VerificationTokenUpdateInput'
    # upsert: 'VerificationTokenUpsertWithoutRelationsInput'


class VerificationTokenUpsertInput(TypedDict):
    create: 'VerificationTokenCreateInput'
    update: 'VerificationTokenUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_VerificationToken_identifier_OrderByInput = TypedDict(
    '_VerificationToken_identifier_OrderByInput',
    {
        'identifier': 'SortOrder',
    },
    total=True
)

_VerificationToken_token_OrderByInput = TypedDict(
    '_VerificationToken_token_OrderByInput',
    {
        'token': 'SortOrder',
    },
    total=True
)

_VerificationToken_expires_OrderByInput = TypedDict(
    '_VerificationToken_expires_OrderByInput',
    {
        'expires': 'SortOrder',
    },
    total=True
)

_VerificationToken_RelevanceInner = TypedDict(
    '_VerificationToken_RelevanceInner',
    {
        'fields': 'List[VerificationTokenScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_VerificationToken_RelevanceOrderByInput = TypedDict(
    '_VerificationToken_RelevanceOrderByInput',
    {
        '_relevance': '_VerificationToken_RelevanceInner',
    },
    total=True
)

VerificationTokenOrderByInput = Union[
    '_VerificationToken_identifier_OrderByInput',
    '_VerificationToken_token_OrderByInput',
    '_VerificationToken_expires_OrderByInput',
    '_VerificationToken_RelevanceOrderByInput',
]



# recursive VerificationToken types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

VerificationTokenRelationFilter = TypedDict(
    'VerificationTokenRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class VerificationTokenListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class VerificationTokenInclude(TypedDict, total=False):
    """VerificationToken relational arguments"""


    

class UserIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromVerificationTokenRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromVerificationTokenRecursive1']


class UserIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromVerificationTokenRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromVerificationTokenRecursive2']


class UserIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromVerificationTokenRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromVerificationTokenRecursive3']


class UserIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    accounts: Union[bool, 'FindManyAccountArgsFromVerificationTokenRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromVerificationTokenRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromVerificationTokenRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromVerificationTokenRecursive4']


class UserIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class UserArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyUserArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class AccountIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class AccountIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class AccountIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class AccountIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class AccountArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyAccountArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class SessionIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class SessionIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class SessionIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class SessionIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class SessionArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManySessionArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""


class VerificationTokenIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class VerificationTokenArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyVerificationTokenArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class AuthenticatorIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class AuthenticatorIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class AuthenticatorIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class AuthenticatorIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class AuthenticatorArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyAuthenticatorArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive1']


class ConfigurationIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive2']


class ConfigurationIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive3']


class ConfigurationIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    user: Union[bool, 'UserArgsFromVerificationTokenRecursive4']


class ConfigurationIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class ConfigurationArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyConfigurationArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromVerificationTokenRecursive1']


class GeneratedFileIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromVerificationTokenRecursive2']


class GeneratedFileIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromVerificationTokenRecursive3']


class GeneratedFileIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromVerificationTokenRecursive4']


class GeneratedFileIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class GeneratedFileArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyGeneratedFileArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromVerificationToken(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    template: Union[bool, 'GeneratedFileArgsFromVerificationTokenRecursive1']


class GeneratedExcelIncludeFromVerificationTokenRecursive1(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    template: Union[bool, 'GeneratedFileArgsFromVerificationTokenRecursive2']


class GeneratedExcelIncludeFromVerificationTokenRecursive2(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    template: Union[bool, 'GeneratedFileArgsFromVerificationTokenRecursive3']


class GeneratedExcelIncludeFromVerificationTokenRecursive3(TypedDict, total=False):
    """Relational arguments for VerificationToken"""
    template: Union[bool, 'GeneratedFileArgsFromVerificationTokenRecursive4']


class GeneratedExcelIncludeFromVerificationTokenRecursive4(TypedDict, total=False):
    """Relational arguments for VerificationToken"""

    

class GeneratedExcelArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    
    

class FindManyGeneratedExcelArgsFromVerificationToken(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromVerificationTokenRecursive1(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromVerificationTokenRecursive2(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromVerificationTokenRecursive3(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromVerificationTokenRecursive4(TypedDict, total=False):
    """Arguments for VerificationToken"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyVerificationTokenArgs = FindManyVerificationTokenArgsFromVerificationToken
FindFirstVerificationTokenArgs = FindManyVerificationTokenArgsFromVerificationToken


    

class VerificationTokenWhereInput(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive1', List['VerificationTokenWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive1']
    OR: List['VerificationTokenWhereInputRecursive1']
    NOT: List['VerificationTokenWhereInputRecursive1']


class VerificationTokenWhereInputRecursive1(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive2', List['VerificationTokenWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive2']
    OR: List['VerificationTokenWhereInputRecursive2']
    NOT: List['VerificationTokenWhereInputRecursive2']


class VerificationTokenWhereInputRecursive2(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive3', List['VerificationTokenWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive3']
    OR: List['VerificationTokenWhereInputRecursive3']
    NOT: List['VerificationTokenWhereInputRecursive3']


class VerificationTokenWhereInputRecursive3(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['VerificationTokenWhereInputRecursive4', List['VerificationTokenWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['VerificationTokenWhereInputRecursive4']
    OR: List['VerificationTokenWhereInputRecursive4']
    NOT: List['VerificationTokenWhereInputRecursive4']


class VerificationTokenWhereInputRecursive4(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringFilter']
    token: Union[_str, 'types.StringFilter']
    expires: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate VerificationToken types


    

class VerificationTokenScalarWhereWithAggregatesInput(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive1']


class VerificationTokenScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive2']


class VerificationTokenScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive3']


class VerificationTokenScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']
    OR: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']
    NOT: List['VerificationTokenScalarWhereWithAggregatesInputRecursive4']


class VerificationTokenScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """VerificationToken arguments for searching"""
    identifier: Union[_str, 'types.StringWithAggregatesFilter']
    token: Union[_str, 'types.StringWithAggregatesFilter']
    expires: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class VerificationTokenGroupByOutput(TypedDict, total=False):
    identifier: _str
    token: _str
    expires: datetime.datetime
    _sum: 'VerificationTokenSumAggregateOutput'
    _avg: 'VerificationTokenAvgAggregateOutput'
    _min: 'VerificationTokenMinAggregateOutput'
    _max: 'VerificationTokenMaxAggregateOutput'
    _count: 'VerificationTokenCountAggregateOutput'


class VerificationTokenAvgAggregateOutput(TypedDict, total=False):
    """VerificationToken output for aggregating averages"""


class VerificationTokenSumAggregateOutput(TypedDict, total=False):
    """VerificationToken output for aggregating sums"""


class VerificationTokenScalarAggregateOutput(TypedDict, total=False):
    """VerificationToken output including scalar fields"""
    identifier: _str
    token: _str
    expires: datetime.datetime


VerificationTokenMinAggregateOutput = VerificationTokenScalarAggregateOutput
VerificationTokenMaxAggregateOutput = VerificationTokenScalarAggregateOutput


class VerificationTokenMaxAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating by max"""
    identifier: bool
    token: bool
    expires: bool


class VerificationTokenMinAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating by min"""
    identifier: bool
    token: bool
    expires: bool


class VerificationTokenNumberAggregateInput(TypedDict, total=False):
    """VerificationToken input for aggregating numbers"""


VerificationTokenAvgAggregateInput = VerificationTokenNumberAggregateInput
VerificationTokenSumAggregateInput = VerificationTokenNumberAggregateInput


VerificationTokenCountAggregateInput = TypedDict(
    'VerificationTokenCountAggregateInput',
    {
        'identifier': bool,
        'token': bool,
        'expires': bool,
        '_all': bool,
    },
    total=False,
)

VerificationTokenCountAggregateOutput = TypedDict(
    'VerificationTokenCountAggregateOutput',
    {
        'identifier': int,
        'token': int,
        'expires': int,
        '_all': int,
    },
    total=False,
)


VerificationTokenKeys = Literal[
    'identifier',
    'token',
    'expires',
]
VerificationTokenScalarFieldKeys = Literal[
    'identifier',
    'token',
    'expires',
]
VerificationTokenScalarFieldKeysT = TypeVar('VerificationTokenScalarFieldKeysT', bound=VerificationTokenScalarFieldKeys)

VerificationTokenRelationalFieldKeys = _NoneType

# Authenticator types

class AuthenticatorOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Authenticator create method"""
    userId: _str
    transports: Optional[_str]
    user: 'UserCreateNestedWithoutRelationsInput'


class AuthenticatorCreateInput(AuthenticatorOptionalCreateInput):
    """Required arguments to the Authenticator create method"""
    credentialID: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: _int
    credentialDeviceType: _str
    credentialBackedUp: _bool


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AuthenticatorOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Authenticator create method, without relations"""
    userId: _str
    transports: Optional[_str]


class AuthenticatorCreateWithoutRelationsInput(AuthenticatorOptionalCreateWithoutRelationsInput):
    """Required arguments to the Authenticator create method, without relations"""
    credentialID: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: _int
    credentialDeviceType: _str
    credentialBackedUp: _bool

class AuthenticatorConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'AuthenticatorCreateWithoutRelationsInput'
    where: 'AuthenticatorWhereUniqueInput'

class AuthenticatorCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AuthenticatorCreateWithoutRelationsInput'
    connect: 'AuthenticatorWhereUniqueInput'
    connect_or_create: 'AuthenticatorConnectOrCreateWithoutRelationsInput'


class AuthenticatorCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AuthenticatorCreateWithoutRelationsInput', List['AuthenticatorCreateWithoutRelationsInput']]
    connect: Union['AuthenticatorWhereUniqueInput', List['AuthenticatorWhereUniqueInput']]
    connect_or_create: Union['AuthenticatorConnectOrCreateWithoutRelationsInput', List['AuthenticatorConnectOrCreateWithoutRelationsInput']]

_AuthenticatorWhereUnique_credentialID_Input = TypedDict(
    '_AuthenticatorWhereUnique_credentialID_Input',
    {
        'credentialID': '_str',
    },
    total=True
)

_AuthenticatorCompoundPrimaryKeyInner = TypedDict(
    '_AuthenticatorCompoundPrimaryKeyInner',
    {
        'userId': '_str',
        'credentialID': '_str',
    },
    total=True
)

_AuthenticatorCompoundPrimaryKey = TypedDict(
    '_AuthenticatorCompoundPrimaryKey',
    {
        'userId_credentialID': '_AuthenticatorCompoundPrimaryKeyInner',
    },
    total=True
)

AuthenticatorWhereUniqueInput = Union[
    '_AuthenticatorWhereUnique_credentialID_Input',
    '_AuthenticatorCompoundPrimaryKey',
]


class AuthenticatorUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    credentialID: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: Union[AtomicIntInput, _int]
    credentialDeviceType: _str
    credentialBackedUp: _bool
    transports: Optional[_str]
    user: 'UserUpdateOneWithoutRelationsInput'


class AuthenticatorUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    credentialID: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: Union[AtomicIntInput, _int]
    credentialDeviceType: _str
    credentialBackedUp: _bool
    transports: Optional[_str]


class AuthenticatorUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AuthenticatorCreateWithoutRelationsInput']
    connect: List['AuthenticatorWhereUniqueInput']
    connect_or_create: List['AuthenticatorConnectOrCreateWithoutRelationsInput']
    set: List['AuthenticatorWhereUniqueInput']
    disconnect: List['AuthenticatorWhereUniqueInput']
    delete: List['AuthenticatorWhereUniqueInput']

    # TODO
    # update: List['AuthenticatorUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AuthenticatorUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AuthenticatorScalarWhereInput']
    # upsert: List['AuthenticatorUpserteWithWhereUniqueWithoutRelationsInput']


class AuthenticatorUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AuthenticatorCreateWithoutRelationsInput'
    connect: 'AuthenticatorWhereUniqueInput'
    connect_or_create: 'AuthenticatorConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AuthenticatorUpdateInput'
    # upsert: 'AuthenticatorUpsertWithoutRelationsInput'


class AuthenticatorUpsertInput(TypedDict):
    create: 'AuthenticatorCreateInput'
    update: 'AuthenticatorUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Authenticator_credentialID_OrderByInput = TypedDict(
    '_Authenticator_credentialID_OrderByInput',
    {
        'credentialID': 'SortOrder',
    },
    total=True
)

_Authenticator_userId_OrderByInput = TypedDict(
    '_Authenticator_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Authenticator_providerAccountId_OrderByInput = TypedDict(
    '_Authenticator_providerAccountId_OrderByInput',
    {
        'providerAccountId': 'SortOrder',
    },
    total=True
)

_Authenticator_credentialPublicKey_OrderByInput = TypedDict(
    '_Authenticator_credentialPublicKey_OrderByInput',
    {
        'credentialPublicKey': 'SortOrder',
    },
    total=True
)

_Authenticator_counter_OrderByInput = TypedDict(
    '_Authenticator_counter_OrderByInput',
    {
        'counter': 'SortOrder',
    },
    total=True
)

_Authenticator_credentialDeviceType_OrderByInput = TypedDict(
    '_Authenticator_credentialDeviceType_OrderByInput',
    {
        'credentialDeviceType': 'SortOrder',
    },
    total=True
)

_Authenticator_credentialBackedUp_OrderByInput = TypedDict(
    '_Authenticator_credentialBackedUp_OrderByInput',
    {
        'credentialBackedUp': 'SortOrder',
    },
    total=True
)

_Authenticator_transports_OrderByInput = TypedDict(
    '_Authenticator_transports_OrderByInput',
    {
        'transports': 'SortOrder',
    },
    total=True
)

_Authenticator_RelevanceInner = TypedDict(
    '_Authenticator_RelevanceInner',
    {
        'fields': 'List[AuthenticatorScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Authenticator_RelevanceOrderByInput = TypedDict(
    '_Authenticator_RelevanceOrderByInput',
    {
        '_relevance': '_Authenticator_RelevanceInner',
    },
    total=True
)

AuthenticatorOrderByInput = Union[
    '_Authenticator_credentialID_OrderByInput',
    '_Authenticator_userId_OrderByInput',
    '_Authenticator_providerAccountId_OrderByInput',
    '_Authenticator_credentialPublicKey_OrderByInput',
    '_Authenticator_counter_OrderByInput',
    '_Authenticator_credentialDeviceType_OrderByInput',
    '_Authenticator_credentialBackedUp_OrderByInput',
    '_Authenticator_transports_OrderByInput',
    '_Authenticator_RelevanceOrderByInput',
]



# recursive Authenticator types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AuthenticatorRelationFilter = TypedDict(
    'AuthenticatorRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AuthenticatorListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AuthenticatorInclude(TypedDict, total=False):
    """Authenticator relational arguments"""
    user: Union[bool, 'UserArgsFromAuthenticator']


    

class UserIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    accounts: Union[bool, 'FindManyAccountArgsFromAuthenticatorRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromAuthenticatorRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAuthenticatorRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAuthenticatorRecursive1']


class UserIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    accounts: Union[bool, 'FindManyAccountArgsFromAuthenticatorRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromAuthenticatorRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAuthenticatorRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAuthenticatorRecursive2']


class UserIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    accounts: Union[bool, 'FindManyAccountArgsFromAuthenticatorRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromAuthenticatorRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAuthenticatorRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAuthenticatorRecursive3']


class UserIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    accounts: Union[bool, 'FindManyAccountArgsFromAuthenticatorRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromAuthenticatorRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromAuthenticatorRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromAuthenticatorRecursive4']


class UserIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class UserArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyUserArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive1']


class AccountIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive2']


class AccountIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive3']


class AccountIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive4']


class AccountIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class AccountArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyAccountArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive1']


class SessionIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive2']


class SessionIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive3']


class SessionIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive4']


class SessionIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class SessionArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManySessionArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""


class VerificationTokenIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""


class VerificationTokenIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""


class VerificationTokenIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""


class VerificationTokenIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class VerificationTokenArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyVerificationTokenArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive1']


class AuthenticatorIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive2']


class AuthenticatorIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive3']


class AuthenticatorIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive4']


class AuthenticatorIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class AuthenticatorArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyAuthenticatorArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive1']


class ConfigurationIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive2']


class ConfigurationIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive3']


class ConfigurationIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    user: Union[bool, 'UserArgsFromAuthenticatorRecursive4']


class ConfigurationIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class ConfigurationArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyConfigurationArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAuthenticatorRecursive1']


class GeneratedFileIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAuthenticatorRecursive2']


class GeneratedFileIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAuthenticatorRecursive3']


class GeneratedFileIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromAuthenticatorRecursive4']


class GeneratedFileIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class GeneratedFileArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyGeneratedFileArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromAuthenticator(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    template: Union[bool, 'GeneratedFileArgsFromAuthenticatorRecursive1']


class GeneratedExcelIncludeFromAuthenticatorRecursive1(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    template: Union[bool, 'GeneratedFileArgsFromAuthenticatorRecursive2']


class GeneratedExcelIncludeFromAuthenticatorRecursive2(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    template: Union[bool, 'GeneratedFileArgsFromAuthenticatorRecursive3']


class GeneratedExcelIncludeFromAuthenticatorRecursive3(TypedDict, total=False):
    """Relational arguments for Authenticator"""
    template: Union[bool, 'GeneratedFileArgsFromAuthenticatorRecursive4']


class GeneratedExcelIncludeFromAuthenticatorRecursive4(TypedDict, total=False):
    """Relational arguments for Authenticator"""

    

class GeneratedExcelArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    
    

class FindManyGeneratedExcelArgsFromAuthenticator(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromAuthenticatorRecursive1(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromAuthenticatorRecursive2(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromAuthenticatorRecursive3(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromAuthenticatorRecursive4(TypedDict, total=False):
    """Arguments for Authenticator"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyAuthenticatorArgs = FindManyAuthenticatorArgsFromAuthenticator
FindFirstAuthenticatorArgs = FindManyAuthenticatorArgsFromAuthenticator


    

class AuthenticatorWhereInput(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    credentialPublicKey: Union[_str, 'types.StringFilter']
    counter: Union[_int, 'types.IntFilter']
    credentialDeviceType: Union[_str, 'types.StringFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanFilter']
    transports: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthenticatorWhereInputRecursive1', List['AuthenticatorWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AuthenticatorWhereInputRecursive1']
    OR: List['AuthenticatorWhereInputRecursive1']
    NOT: List['AuthenticatorWhereInputRecursive1']


class AuthenticatorWhereInputRecursive1(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    credentialPublicKey: Union[_str, 'types.StringFilter']
    counter: Union[_int, 'types.IntFilter']
    credentialDeviceType: Union[_str, 'types.StringFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanFilter']
    transports: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthenticatorWhereInputRecursive2', List['AuthenticatorWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AuthenticatorWhereInputRecursive2']
    OR: List['AuthenticatorWhereInputRecursive2']
    NOT: List['AuthenticatorWhereInputRecursive2']


class AuthenticatorWhereInputRecursive2(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    credentialPublicKey: Union[_str, 'types.StringFilter']
    counter: Union[_int, 'types.IntFilter']
    credentialDeviceType: Union[_str, 'types.StringFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanFilter']
    transports: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthenticatorWhereInputRecursive3', List['AuthenticatorWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AuthenticatorWhereInputRecursive3']
    OR: List['AuthenticatorWhereInputRecursive3']
    NOT: List['AuthenticatorWhereInputRecursive3']


class AuthenticatorWhereInputRecursive3(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    credentialPublicKey: Union[_str, 'types.StringFilter']
    counter: Union[_int, 'types.IntFilter']
    credentialDeviceType: Union[_str, 'types.StringFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanFilter']
    transports: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'

    # should be noted that AND and NOT should be Union['AuthenticatorWhereInputRecursive4', List['AuthenticatorWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AuthenticatorWhereInputRecursive4']
    OR: List['AuthenticatorWhereInputRecursive4']
    NOT: List['AuthenticatorWhereInputRecursive4']


class AuthenticatorWhereInputRecursive4(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    providerAccountId: Union[_str, 'types.StringFilter']
    credentialPublicKey: Union[_str, 'types.StringFilter']
    counter: Union[_int, 'types.IntFilter']
    credentialDeviceType: Union[_str, 'types.StringFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanFilter']
    transports: Union[None, _str, 'types.StringFilter']
    user: 'UserRelationFilter'



# aggregate Authenticator types


    

class AuthenticatorScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    credentialPublicKey: Union[_str, 'types.StringWithAggregatesFilter']
    counter: Union[_int, 'types.IntWithAggregatesFilter']
    credentialDeviceType: Union[_str, 'types.StringWithAggregatesFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanWithAggregatesFilter']
    transports: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuthenticatorScalarWhereWithAggregatesInputRecursive1']
    OR: List['AuthenticatorScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AuthenticatorScalarWhereWithAggregatesInputRecursive1']


class AuthenticatorScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    credentialPublicKey: Union[_str, 'types.StringWithAggregatesFilter']
    counter: Union[_int, 'types.IntWithAggregatesFilter']
    credentialDeviceType: Union[_str, 'types.StringWithAggregatesFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanWithAggregatesFilter']
    transports: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuthenticatorScalarWhereWithAggregatesInputRecursive2']
    OR: List['AuthenticatorScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AuthenticatorScalarWhereWithAggregatesInputRecursive2']


class AuthenticatorScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    credentialPublicKey: Union[_str, 'types.StringWithAggregatesFilter']
    counter: Union[_int, 'types.IntWithAggregatesFilter']
    credentialDeviceType: Union[_str, 'types.StringWithAggregatesFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanWithAggregatesFilter']
    transports: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuthenticatorScalarWhereWithAggregatesInputRecursive3']
    OR: List['AuthenticatorScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AuthenticatorScalarWhereWithAggregatesInputRecursive3']


class AuthenticatorScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    credentialPublicKey: Union[_str, 'types.StringWithAggregatesFilter']
    counter: Union[_int, 'types.IntWithAggregatesFilter']
    credentialDeviceType: Union[_str, 'types.StringWithAggregatesFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanWithAggregatesFilter']
    transports: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['AuthenticatorScalarWhereWithAggregatesInputRecursive4']
    OR: List['AuthenticatorScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AuthenticatorScalarWhereWithAggregatesInputRecursive4']


class AuthenticatorScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Authenticator arguments for searching"""
    credentialID: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    providerAccountId: Union[_str, 'types.StringWithAggregatesFilter']
    credentialPublicKey: Union[_str, 'types.StringWithAggregatesFilter']
    counter: Union[_int, 'types.IntWithAggregatesFilter']
    credentialDeviceType: Union[_str, 'types.StringWithAggregatesFilter']
    credentialBackedUp: Union[_bool, 'types.BooleanWithAggregatesFilter']
    transports: Union[_str, 'types.StringWithAggregatesFilter']



class AuthenticatorGroupByOutput(TypedDict, total=False):
    credentialID: _str
    userId: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: _int
    credentialDeviceType: _str
    credentialBackedUp: _bool
    transports: _str
    _sum: 'AuthenticatorSumAggregateOutput'
    _avg: 'AuthenticatorAvgAggregateOutput'
    _min: 'AuthenticatorMinAggregateOutput'
    _max: 'AuthenticatorMaxAggregateOutput'
    _count: 'AuthenticatorCountAggregateOutput'


class AuthenticatorAvgAggregateOutput(TypedDict, total=False):
    """Authenticator output for aggregating averages"""
    counter: float


class AuthenticatorSumAggregateOutput(TypedDict, total=False):
    """Authenticator output for aggregating sums"""
    counter: _int


class AuthenticatorScalarAggregateOutput(TypedDict, total=False):
    """Authenticator output including scalar fields"""
    credentialID: _str
    userId: _str
    providerAccountId: _str
    credentialPublicKey: _str
    counter: _int
    credentialDeviceType: _str
    credentialBackedUp: _bool
    transports: _str


AuthenticatorMinAggregateOutput = AuthenticatorScalarAggregateOutput
AuthenticatorMaxAggregateOutput = AuthenticatorScalarAggregateOutput


class AuthenticatorMaxAggregateInput(TypedDict, total=False):
    """Authenticator input for aggregating by max"""
    credentialID: bool
    userId: bool
    providerAccountId: bool
    credentialPublicKey: bool
    counter: bool
    credentialDeviceType: bool
    credentialBackedUp: bool
    transports: bool


class AuthenticatorMinAggregateInput(TypedDict, total=False):
    """Authenticator input for aggregating by min"""
    credentialID: bool
    userId: bool
    providerAccountId: bool
    credentialPublicKey: bool
    counter: bool
    credentialDeviceType: bool
    credentialBackedUp: bool
    transports: bool


class AuthenticatorNumberAggregateInput(TypedDict, total=False):
    """Authenticator input for aggregating numbers"""
    counter: bool


AuthenticatorAvgAggregateInput = AuthenticatorNumberAggregateInput
AuthenticatorSumAggregateInput = AuthenticatorNumberAggregateInput


AuthenticatorCountAggregateInput = TypedDict(
    'AuthenticatorCountAggregateInput',
    {
        'credentialID': bool,
        'userId': bool,
        'providerAccountId': bool,
        'credentialPublicKey': bool,
        'counter': bool,
        'credentialDeviceType': bool,
        'credentialBackedUp': bool,
        'transports': bool,
        '_all': bool,
    },
    total=False,
)

AuthenticatorCountAggregateOutput = TypedDict(
    'AuthenticatorCountAggregateOutput',
    {
        'credentialID': int,
        'userId': int,
        'providerAccountId': int,
        'credentialPublicKey': int,
        'counter': int,
        'credentialDeviceType': int,
        'credentialBackedUp': int,
        'transports': int,
        '_all': int,
    },
    total=False,
)


AuthenticatorKeys = Literal[
    'credentialID',
    'userId',
    'providerAccountId',
    'credentialPublicKey',
    'counter',
    'credentialDeviceType',
    'credentialBackedUp',
    'transports',
    'user',
]
AuthenticatorScalarFieldKeys = Literal[
    'credentialID',
    'userId',
    'providerAccountId',
    'credentialPublicKey',
    'counter',
    'credentialDeviceType',
    'credentialBackedUp',
    'transports',
]
AuthenticatorScalarFieldKeysT = TypeVar('AuthenticatorScalarFieldKeysT', bound=AuthenticatorScalarFieldKeys)

AuthenticatorRelationalFieldKeys = Literal[
        'user',
    ]

# Configuration types

class ConfigurationOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Configuration create method"""
    id: _str
    userId: _str
    user: 'UserCreateNestedWithoutRelationsInput'
    generatedExcel: Optional['fields.Base64']
    generatedBulletins: Optional['fields.Base64']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ConfigurationCreateInput(ConfigurationOptionalCreateInput):
    """Required arguments to the Configuration create method"""
    fileName: _str
    excelUrl: _str
    wordUrl: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ConfigurationOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Configuration create method, without relations"""
    id: _str
    userId: _str
    generatedExcel: Optional['fields.Base64']
    generatedBulletins: Optional['fields.Base64']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ConfigurationCreateWithoutRelationsInput(ConfigurationOptionalCreateWithoutRelationsInput):
    """Required arguments to the Configuration create method, without relations"""
    fileName: _str
    excelUrl: _str
    wordUrl: _str

class ConfigurationConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'ConfigurationCreateWithoutRelationsInput'
    where: 'ConfigurationWhereUniqueInput'

class ConfigurationCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ConfigurationCreateWithoutRelationsInput'
    connect: 'ConfigurationWhereUniqueInput'
    connect_or_create: 'ConfigurationConnectOrCreateWithoutRelationsInput'


class ConfigurationCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ConfigurationCreateWithoutRelationsInput', List['ConfigurationCreateWithoutRelationsInput']]
    connect: Union['ConfigurationWhereUniqueInput', List['ConfigurationWhereUniqueInput']]
    connect_or_create: Union['ConfigurationConnectOrCreateWithoutRelationsInput', List['ConfigurationConnectOrCreateWithoutRelationsInput']]

_ConfigurationWhereUnique_id_Input = TypedDict(
    '_ConfigurationWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

ConfigurationWhereUniqueInput = _ConfigurationWhereUnique_id_Input


class ConfigurationUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    fileName: _str
    excelUrl: _str
    wordUrl: _str
    user: 'UserUpdateOneWithoutRelationsInput'
    generatedExcel: Optional['fields.Base64']
    generatedBulletins: Optional['fields.Base64']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ConfigurationUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    fileName: _str
    excelUrl: _str
    wordUrl: _str
    generatedExcel: Optional['fields.Base64']
    generatedBulletins: Optional['fields.Base64']
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ConfigurationUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ConfigurationCreateWithoutRelationsInput']
    connect: List['ConfigurationWhereUniqueInput']
    connect_or_create: List['ConfigurationConnectOrCreateWithoutRelationsInput']
    set: List['ConfigurationWhereUniqueInput']
    disconnect: List['ConfigurationWhereUniqueInput']
    delete: List['ConfigurationWhereUniqueInput']

    # TODO
    # update: List['ConfigurationUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ConfigurationUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ConfigurationScalarWhereInput']
    # upsert: List['ConfigurationUpserteWithWhereUniqueWithoutRelationsInput']


class ConfigurationUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ConfigurationCreateWithoutRelationsInput'
    connect: 'ConfigurationWhereUniqueInput'
    connect_or_create: 'ConfigurationConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ConfigurationUpdateInput'
    # upsert: 'ConfigurationUpsertWithoutRelationsInput'


class ConfigurationUpsertInput(TypedDict):
    create: 'ConfigurationCreateInput'
    update: 'ConfigurationUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Configuration_id_OrderByInput = TypedDict(
    '_Configuration_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Configuration_fileName_OrderByInput = TypedDict(
    '_Configuration_fileName_OrderByInput',
    {
        'fileName': 'SortOrder',
    },
    total=True
)

_Configuration_excelUrl_OrderByInput = TypedDict(
    '_Configuration_excelUrl_OrderByInput',
    {
        'excelUrl': 'SortOrder',
    },
    total=True
)

_Configuration_wordUrl_OrderByInput = TypedDict(
    '_Configuration_wordUrl_OrderByInput',
    {
        'wordUrl': 'SortOrder',
    },
    total=True
)

_Configuration_userId_OrderByInput = TypedDict(
    '_Configuration_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_Configuration_generatedExcel_OrderByInput = TypedDict(
    '_Configuration_generatedExcel_OrderByInput',
    {
        'generatedExcel': 'SortOrder',
    },
    total=True
)

_Configuration_generatedBulletins_OrderByInput = TypedDict(
    '_Configuration_generatedBulletins_OrderByInput',
    {
        'generatedBulletins': 'SortOrder',
    },
    total=True
)

_Configuration_createdAt_OrderByInput = TypedDict(
    '_Configuration_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Configuration_updatedAt_OrderByInput = TypedDict(
    '_Configuration_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_Configuration_RelevanceInner = TypedDict(
    '_Configuration_RelevanceInner',
    {
        'fields': 'List[ConfigurationScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_Configuration_RelevanceOrderByInput = TypedDict(
    '_Configuration_RelevanceOrderByInput',
    {
        '_relevance': '_Configuration_RelevanceInner',
    },
    total=True
)

ConfigurationOrderByInput = Union[
    '_Configuration_id_OrderByInput',
    '_Configuration_fileName_OrderByInput',
    '_Configuration_excelUrl_OrderByInput',
    '_Configuration_wordUrl_OrderByInput',
    '_Configuration_userId_OrderByInput',
    '_Configuration_generatedExcel_OrderByInput',
    '_Configuration_generatedBulletins_OrderByInput',
    '_Configuration_createdAt_OrderByInput',
    '_Configuration_updatedAt_OrderByInput',
    '_Configuration_RelevanceOrderByInput',
]



# recursive Configuration types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ConfigurationRelationFilter = TypedDict(
    'ConfigurationRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ConfigurationListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ConfigurationInclude(TypedDict, total=False):
    """Configuration relational arguments"""
    user: Union[bool, 'UserArgsFromConfiguration']


    

class UserIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    accounts: Union[bool, 'FindManyAccountArgsFromConfigurationRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromConfigurationRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromConfigurationRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromConfigurationRecursive1']


class UserIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    accounts: Union[bool, 'FindManyAccountArgsFromConfigurationRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromConfigurationRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromConfigurationRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromConfigurationRecursive2']


class UserIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    accounts: Union[bool, 'FindManyAccountArgsFromConfigurationRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromConfigurationRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromConfigurationRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromConfigurationRecursive3']


class UserIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    accounts: Union[bool, 'FindManyAccountArgsFromConfigurationRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromConfigurationRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromConfigurationRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromConfigurationRecursive4']


class UserIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class UserArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyUserArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive1']


class AccountIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive2']


class AccountIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive3']


class AccountIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive4']


class AccountIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class AccountArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyAccountArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive1']


class SessionIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive2']


class SessionIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive3']


class SessionIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive4']


class SessionIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class SessionArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManySessionArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""


class VerificationTokenIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""


class VerificationTokenIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""


class VerificationTokenIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""


class VerificationTokenIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class VerificationTokenArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyVerificationTokenArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive1']


class AuthenticatorIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive2']


class AuthenticatorIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive3']


class AuthenticatorIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive4']


class AuthenticatorIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class AuthenticatorArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyAuthenticatorArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive1']


class ConfigurationIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive2']


class ConfigurationIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive3']


class ConfigurationIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    user: Union[bool, 'UserArgsFromConfigurationRecursive4']


class ConfigurationIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class ConfigurationArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyConfigurationArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromConfigurationRecursive1']


class GeneratedFileIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromConfigurationRecursive2']


class GeneratedFileIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromConfigurationRecursive3']


class GeneratedFileIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromConfigurationRecursive4']


class GeneratedFileIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class GeneratedFileArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyGeneratedFileArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromConfiguration(TypedDict, total=False):
    """Relational arguments for Configuration"""
    template: Union[bool, 'GeneratedFileArgsFromConfigurationRecursive1']


class GeneratedExcelIncludeFromConfigurationRecursive1(TypedDict, total=False):
    """Relational arguments for Configuration"""
    template: Union[bool, 'GeneratedFileArgsFromConfigurationRecursive2']


class GeneratedExcelIncludeFromConfigurationRecursive2(TypedDict, total=False):
    """Relational arguments for Configuration"""
    template: Union[bool, 'GeneratedFileArgsFromConfigurationRecursive3']


class GeneratedExcelIncludeFromConfigurationRecursive3(TypedDict, total=False):
    """Relational arguments for Configuration"""
    template: Union[bool, 'GeneratedFileArgsFromConfigurationRecursive4']


class GeneratedExcelIncludeFromConfigurationRecursive4(TypedDict, total=False):
    """Relational arguments for Configuration"""

    

class GeneratedExcelArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    
    

class FindManyGeneratedExcelArgsFromConfiguration(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromConfigurationRecursive1(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromConfigurationRecursive2(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromConfigurationRecursive3(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromConfigurationRecursive4(TypedDict, total=False):
    """Arguments for Configuration"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyConfigurationArgs = FindManyConfigurationArgsFromConfiguration
FindFirstConfigurationArgs = FindManyConfigurationArgsFromConfiguration


    

class ConfigurationWhereInput(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    fileName: Union[_str, 'types.StringFilter']
    excelUrl: Union[_str, 'types.StringFilter']
    wordUrl: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    generatedExcel: Union[None, 'fields.Base64', 'types.BytesFilter']
    generatedBulletins: Union[None, 'fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ConfigurationWhereInputRecursive1', List['ConfigurationWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ConfigurationWhereInputRecursive1']
    OR: List['ConfigurationWhereInputRecursive1']
    NOT: List['ConfigurationWhereInputRecursive1']


class ConfigurationWhereInputRecursive1(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    fileName: Union[_str, 'types.StringFilter']
    excelUrl: Union[_str, 'types.StringFilter']
    wordUrl: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    generatedExcel: Union[None, 'fields.Base64', 'types.BytesFilter']
    generatedBulletins: Union[None, 'fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ConfigurationWhereInputRecursive2', List['ConfigurationWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ConfigurationWhereInputRecursive2']
    OR: List['ConfigurationWhereInputRecursive2']
    NOT: List['ConfigurationWhereInputRecursive2']


class ConfigurationWhereInputRecursive2(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    fileName: Union[_str, 'types.StringFilter']
    excelUrl: Union[_str, 'types.StringFilter']
    wordUrl: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    generatedExcel: Union[None, 'fields.Base64', 'types.BytesFilter']
    generatedBulletins: Union[None, 'fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ConfigurationWhereInputRecursive3', List['ConfigurationWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ConfigurationWhereInputRecursive3']
    OR: List['ConfigurationWhereInputRecursive3']
    NOT: List['ConfigurationWhereInputRecursive3']


class ConfigurationWhereInputRecursive3(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    fileName: Union[_str, 'types.StringFilter']
    excelUrl: Union[_str, 'types.StringFilter']
    wordUrl: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    generatedExcel: Union[None, 'fields.Base64', 'types.BytesFilter']
    generatedBulletins: Union[None, 'fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['ConfigurationWhereInputRecursive4', List['ConfigurationWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ConfigurationWhereInputRecursive4']
    OR: List['ConfigurationWhereInputRecursive4']
    NOT: List['ConfigurationWhereInputRecursive4']


class ConfigurationWhereInputRecursive4(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    fileName: Union[_str, 'types.StringFilter']
    excelUrl: Union[_str, 'types.StringFilter']
    wordUrl: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    user: 'UserRelationFilter'
    generatedExcel: Union[None, 'fields.Base64', 'types.BytesFilter']
    generatedBulletins: Union[None, 'fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate Configuration types


    

class ConfigurationScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    fileName: Union[_str, 'types.StringWithAggregatesFilter']
    excelUrl: Union[_str, 'types.StringWithAggregatesFilter']
    wordUrl: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    generatedExcel: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    generatedBulletins: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConfigurationScalarWhereWithAggregatesInputRecursive1']
    OR: List['ConfigurationScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ConfigurationScalarWhereWithAggregatesInputRecursive1']


class ConfigurationScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    fileName: Union[_str, 'types.StringWithAggregatesFilter']
    excelUrl: Union[_str, 'types.StringWithAggregatesFilter']
    wordUrl: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    generatedExcel: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    generatedBulletins: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConfigurationScalarWhereWithAggregatesInputRecursive2']
    OR: List['ConfigurationScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ConfigurationScalarWhereWithAggregatesInputRecursive2']


class ConfigurationScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    fileName: Union[_str, 'types.StringWithAggregatesFilter']
    excelUrl: Union[_str, 'types.StringWithAggregatesFilter']
    wordUrl: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    generatedExcel: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    generatedBulletins: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConfigurationScalarWhereWithAggregatesInputRecursive3']
    OR: List['ConfigurationScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ConfigurationScalarWhereWithAggregatesInputRecursive3']


class ConfigurationScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    fileName: Union[_str, 'types.StringWithAggregatesFilter']
    excelUrl: Union[_str, 'types.StringWithAggregatesFilter']
    wordUrl: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    generatedExcel: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    generatedBulletins: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConfigurationScalarWhereWithAggregatesInputRecursive4']
    OR: List['ConfigurationScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ConfigurationScalarWhereWithAggregatesInputRecursive4']


class ConfigurationScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Configuration arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    fileName: Union[_str, 'types.StringWithAggregatesFilter']
    excelUrl: Union[_str, 'types.StringWithAggregatesFilter']
    wordUrl: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    generatedExcel: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    generatedBulletins: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ConfigurationGroupByOutput(TypedDict, total=False):
    id: _str
    fileName: _str
    excelUrl: _str
    wordUrl: _str
    userId: _str
    generatedExcel: 'fields.Base64'
    generatedBulletins: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'ConfigurationSumAggregateOutput'
    _avg: 'ConfigurationAvgAggregateOutput'
    _min: 'ConfigurationMinAggregateOutput'
    _max: 'ConfigurationMaxAggregateOutput'
    _count: 'ConfigurationCountAggregateOutput'


class ConfigurationAvgAggregateOutput(TypedDict, total=False):
    """Configuration output for aggregating averages"""


class ConfigurationSumAggregateOutput(TypedDict, total=False):
    """Configuration output for aggregating sums"""


class ConfigurationScalarAggregateOutput(TypedDict, total=False):
    """Configuration output including scalar fields"""
    id: _str
    fileName: _str
    excelUrl: _str
    wordUrl: _str
    userId: _str
    generatedExcel: 'fields.Base64'
    generatedBulletins: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


ConfigurationMinAggregateOutput = ConfigurationScalarAggregateOutput
ConfigurationMaxAggregateOutput = ConfigurationScalarAggregateOutput


class ConfigurationMaxAggregateInput(TypedDict, total=False):
    """Configuration input for aggregating by max"""
    id: bool
    fileName: bool
    excelUrl: bool
    wordUrl: bool
    userId: bool
    generatedExcel: bool
    generatedBulletins: bool
    createdAt: bool
    updatedAt: bool


class ConfigurationMinAggregateInput(TypedDict, total=False):
    """Configuration input for aggregating by min"""
    id: bool
    fileName: bool
    excelUrl: bool
    wordUrl: bool
    userId: bool
    generatedExcel: bool
    generatedBulletins: bool
    createdAt: bool
    updatedAt: bool


class ConfigurationNumberAggregateInput(TypedDict, total=False):
    """Configuration input for aggregating numbers"""


ConfigurationAvgAggregateInput = ConfigurationNumberAggregateInput
ConfigurationSumAggregateInput = ConfigurationNumberAggregateInput


ConfigurationCountAggregateInput = TypedDict(
    'ConfigurationCountAggregateInput',
    {
        'id': bool,
        'fileName': bool,
        'excelUrl': bool,
        'wordUrl': bool,
        'userId': bool,
        'generatedExcel': bool,
        'generatedBulletins': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

ConfigurationCountAggregateOutput = TypedDict(
    'ConfigurationCountAggregateOutput',
    {
        'id': int,
        'fileName': int,
        'excelUrl': int,
        'wordUrl': int,
        'userId': int,
        'generatedExcel': int,
        'generatedBulletins': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


ConfigurationKeys = Literal[
    'id',
    'fileName',
    'excelUrl',
    'wordUrl',
    'userId',
    'user',
    'generatedExcel',
    'generatedBulletins',
    'createdAt',
    'updatedAt',
]
ConfigurationScalarFieldKeys = Literal[
    'id',
    'fileName',
    'excelUrl',
    'wordUrl',
    'userId',
    'generatedExcel',
    'generatedBulletins',
    'createdAt',
    'updatedAt',
]
ConfigurationScalarFieldKeysT = TypeVar('ConfigurationScalarFieldKeysT', bound=ConfigurationScalarFieldKeys)

ConfigurationRelationalFieldKeys = Literal[
        'user',
    ]

# GeneratedFile types

class GeneratedFileOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedFile create method"""
    id: _int
    isTemplate: _bool
    templateType: Optional[_str]
    category: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    generatedExcels: 'GeneratedExcelCreateManyNestedWithoutRelationsInput'


class GeneratedFileCreateInput(GeneratedFileOptionalCreateInput):
    """Required arguments to the GeneratedFile create method"""
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedFileOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedFile create method, without relations"""
    id: _int
    isTemplate: _bool
    templateType: Optional[_str]
    category: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedFileCreateWithoutRelationsInput(GeneratedFileOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedFile create method, without relations"""
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'

class GeneratedFileConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedFileCreateWithoutRelationsInput'
    where: 'GeneratedFileWhereUniqueInput'

class GeneratedFileCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedFileCreateWithoutRelationsInput'
    connect: 'GeneratedFileWhereUniqueInput'
    connect_or_create: 'GeneratedFileConnectOrCreateWithoutRelationsInput'


class GeneratedFileCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedFileCreateWithoutRelationsInput', List['GeneratedFileCreateWithoutRelationsInput']]
    connect: Union['GeneratedFileWhereUniqueInput', List['GeneratedFileWhereUniqueInput']]
    connect_or_create: Union['GeneratedFileConnectOrCreateWithoutRelationsInput', List['GeneratedFileConnectOrCreateWithoutRelationsInput']]

_GeneratedFileWhereUnique_id_Input = TypedDict(
    '_GeneratedFileWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

GeneratedFileWhereUniqueInput = _GeneratedFileWhereUnique_id_Input


class GeneratedFileUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'
    isTemplate: _bool
    templateType: Optional[_str]
    category: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    generatedExcels: 'GeneratedExcelUpdateManyWithoutRelationsInput'


class GeneratedFileUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'
    isTemplate: _bool
    templateType: Optional[_str]
    category: Optional[_str]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedFileUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedFileCreateWithoutRelationsInput']
    connect: List['GeneratedFileWhereUniqueInput']
    connect_or_create: List['GeneratedFileConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedFileWhereUniqueInput']
    disconnect: List['GeneratedFileWhereUniqueInput']
    delete: List['GeneratedFileWhereUniqueInput']

    # TODO
    # update: List['GeneratedFileUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedFileUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedFileScalarWhereInput']
    # upsert: List['GeneratedFileUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedFileUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedFileCreateWithoutRelationsInput'
    connect: 'GeneratedFileWhereUniqueInput'
    connect_or_create: 'GeneratedFileConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedFileUpdateInput'
    # upsert: 'GeneratedFileUpsertWithoutRelationsInput'


class GeneratedFileUpsertInput(TypedDict):
    create: 'GeneratedFileCreateInput'
    update: 'GeneratedFileUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedFile_id_OrderByInput = TypedDict(
    '_GeneratedFile_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedFile_filename_OrderByInput = TypedDict(
    '_GeneratedFile_filename_OrderByInput',
    {
        'filename': 'SortOrder',
    },
    total=True
)

_GeneratedFile_fileType_OrderByInput = TypedDict(
    '_GeneratedFile_fileType_OrderByInput',
    {
        'fileType': 'SortOrder',
    },
    total=True
)

_GeneratedFile_fileData_OrderByInput = TypedDict(
    '_GeneratedFile_fileData_OrderByInput',
    {
        'fileData': 'SortOrder',
    },
    total=True
)

_GeneratedFile_isTemplate_OrderByInput = TypedDict(
    '_GeneratedFile_isTemplate_OrderByInput',
    {
        'isTemplate': 'SortOrder',
    },
    total=True
)

_GeneratedFile_templateType_OrderByInput = TypedDict(
    '_GeneratedFile_templateType_OrderByInput',
    {
        'templateType': 'SortOrder',
    },
    total=True
)

_GeneratedFile_category_OrderByInput = TypedDict(
    '_GeneratedFile_category_OrderByInput',
    {
        'category': 'SortOrder',
    },
    total=True
)

_GeneratedFile_createdAt_OrderByInput = TypedDict(
    '_GeneratedFile_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedFile_updatedAt_OrderByInput = TypedDict(
    '_GeneratedFile_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_GeneratedFile_RelevanceInner = TypedDict(
    '_GeneratedFile_RelevanceInner',
    {
        'fields': 'List[GeneratedFileScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedFile_RelevanceOrderByInput = TypedDict(
    '_GeneratedFile_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedFile_RelevanceInner',
    },
    total=True
)

GeneratedFileOrderByInput = Union[
    '_GeneratedFile_id_OrderByInput',
    '_GeneratedFile_filename_OrderByInput',
    '_GeneratedFile_fileType_OrderByInput',
    '_GeneratedFile_fileData_OrderByInput',
    '_GeneratedFile_isTemplate_OrderByInput',
    '_GeneratedFile_templateType_OrderByInput',
    '_GeneratedFile_category_OrderByInput',
    '_GeneratedFile_createdAt_OrderByInput',
    '_GeneratedFile_updatedAt_OrderByInput',
    '_GeneratedFile_RelevanceOrderByInput',
]



# recursive GeneratedFile types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedFileRelationFilter = TypedDict(
    'GeneratedFileRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedFileListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedFileInclude(TypedDict, total=False):
    """GeneratedFile relational arguments"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedFile']


    

class UserIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedFileRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedFileRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedFileRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedFileRecursive1']


class UserIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedFileRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedFileRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedFileRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedFileRecursive2']


class UserIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedFileRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedFileRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedFileRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedFileRecursive3']


class UserIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedFileRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedFileRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedFileRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedFileRecursive4']


class UserIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class UserArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyUserArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive1']


class AccountIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive2']


class AccountIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive3']


class AccountIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive4']


class AccountIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class AccountArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyAccountArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive1']


class SessionIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive2']


class SessionIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive3']


class SessionIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive4']


class SessionIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class SessionArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManySessionArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""


class VerificationTokenIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""


class VerificationTokenIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""


class VerificationTokenIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""


class VerificationTokenIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class VerificationTokenArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyVerificationTokenArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive1']


class AuthenticatorIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive2']


class AuthenticatorIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive3']


class AuthenticatorIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive4']


class AuthenticatorIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class AuthenticatorArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyAuthenticatorArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive1']


class ConfigurationIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive2']


class ConfigurationIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive3']


class ConfigurationIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    user: Union[bool, 'UserArgsFromGeneratedFileRecursive4']


class ConfigurationIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class ConfigurationArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyConfigurationArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedFileRecursive1']


class GeneratedFileIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedFileRecursive2']


class GeneratedFileIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedFileRecursive3']


class GeneratedFileIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedFileRecursive4']


class GeneratedFileIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class GeneratedFileArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyGeneratedFileArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromGeneratedFile(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedFileRecursive1']


class GeneratedExcelIncludeFromGeneratedFileRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedFileRecursive2']


class GeneratedExcelIncludeFromGeneratedFileRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedFileRecursive3']


class GeneratedExcelIncludeFromGeneratedFileRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedFileRecursive4']


class GeneratedExcelIncludeFromGeneratedFileRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedFile"""

    

class GeneratedExcelArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    
    

class FindManyGeneratedExcelArgsFromGeneratedFile(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromGeneratedFileRecursive1(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromGeneratedFileRecursive2(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromGeneratedFileRecursive3(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromGeneratedFileRecursive4(TypedDict, total=False):
    """Arguments for GeneratedFile"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyGeneratedFileArgs = FindManyGeneratedFileArgsFromGeneratedFile
FindFirstGeneratedFileArgs = FindManyGeneratedFileArgsFromGeneratedFile


    

class GeneratedFileWhereInput(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    filename: Union[_str, 'types.StringFilter']
    fileType: Union[_str, 'types.StringFilter']
    fileData: Union['fields.Base64', 'types.BytesFilter']
    isTemplate: Union[_bool, 'types.BooleanFilter']
    templateType: Union[None, _str, 'types.StringFilter']
    category: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    generatedExcels: 'GeneratedExcelListRelationFilter'

    # should be noted that AND and NOT should be Union['GeneratedFileWhereInputRecursive1', List['GeneratedFileWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedFileWhereInputRecursive1']
    OR: List['GeneratedFileWhereInputRecursive1']
    NOT: List['GeneratedFileWhereInputRecursive1']


class GeneratedFileWhereInputRecursive1(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    filename: Union[_str, 'types.StringFilter']
    fileType: Union[_str, 'types.StringFilter']
    fileData: Union['fields.Base64', 'types.BytesFilter']
    isTemplate: Union[_bool, 'types.BooleanFilter']
    templateType: Union[None, _str, 'types.StringFilter']
    category: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    generatedExcels: 'GeneratedExcelListRelationFilter'

    # should be noted that AND and NOT should be Union['GeneratedFileWhereInputRecursive2', List['GeneratedFileWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedFileWhereInputRecursive2']
    OR: List['GeneratedFileWhereInputRecursive2']
    NOT: List['GeneratedFileWhereInputRecursive2']


class GeneratedFileWhereInputRecursive2(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    filename: Union[_str, 'types.StringFilter']
    fileType: Union[_str, 'types.StringFilter']
    fileData: Union['fields.Base64', 'types.BytesFilter']
    isTemplate: Union[_bool, 'types.BooleanFilter']
    templateType: Union[None, _str, 'types.StringFilter']
    category: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    generatedExcels: 'GeneratedExcelListRelationFilter'

    # should be noted that AND and NOT should be Union['GeneratedFileWhereInputRecursive3', List['GeneratedFileWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedFileWhereInputRecursive3']
    OR: List['GeneratedFileWhereInputRecursive3']
    NOT: List['GeneratedFileWhereInputRecursive3']


class GeneratedFileWhereInputRecursive3(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    filename: Union[_str, 'types.StringFilter']
    fileType: Union[_str, 'types.StringFilter']
    fileData: Union['fields.Base64', 'types.BytesFilter']
    isTemplate: Union[_bool, 'types.BooleanFilter']
    templateType: Union[None, _str, 'types.StringFilter']
    category: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    generatedExcels: 'GeneratedExcelListRelationFilter'

    # should be noted that AND and NOT should be Union['GeneratedFileWhereInputRecursive4', List['GeneratedFileWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedFileWhereInputRecursive4']
    OR: List['GeneratedFileWhereInputRecursive4']
    NOT: List['GeneratedFileWhereInputRecursive4']


class GeneratedFileWhereInputRecursive4(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    filename: Union[_str, 'types.StringFilter']
    fileType: Union[_str, 'types.StringFilter']
    fileData: Union['fields.Base64', 'types.BytesFilter']
    isTemplate: Union[_bool, 'types.BooleanFilter']
    templateType: Union[None, _str, 'types.StringFilter']
    category: Union[None, _str, 'types.StringFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    generatedExcels: 'GeneratedExcelListRelationFilter'



# aggregate GeneratedFile types


    

class GeneratedFileScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    filename: Union[_str, 'types.StringWithAggregatesFilter']
    fileType: Union[_str, 'types.StringWithAggregatesFilter']
    fileData: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    isTemplate: Union[_bool, 'types.BooleanWithAggregatesFilter']
    templateType: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedFileScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedFileScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedFileScalarWhereWithAggregatesInputRecursive1']


class GeneratedFileScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    filename: Union[_str, 'types.StringWithAggregatesFilter']
    fileType: Union[_str, 'types.StringWithAggregatesFilter']
    fileData: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    isTemplate: Union[_bool, 'types.BooleanWithAggregatesFilter']
    templateType: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedFileScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedFileScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedFileScalarWhereWithAggregatesInputRecursive2']


class GeneratedFileScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    filename: Union[_str, 'types.StringWithAggregatesFilter']
    fileType: Union[_str, 'types.StringWithAggregatesFilter']
    fileData: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    isTemplate: Union[_bool, 'types.BooleanWithAggregatesFilter']
    templateType: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedFileScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedFileScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedFileScalarWhereWithAggregatesInputRecursive3']


class GeneratedFileScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    filename: Union[_str, 'types.StringWithAggregatesFilter']
    fileType: Union[_str, 'types.StringWithAggregatesFilter']
    fileData: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    isTemplate: Union[_bool, 'types.BooleanWithAggregatesFilter']
    templateType: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedFileScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedFileScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedFileScalarWhereWithAggregatesInputRecursive4']


class GeneratedFileScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedFile arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    filename: Union[_str, 'types.StringWithAggregatesFilter']
    fileType: Union[_str, 'types.StringWithAggregatesFilter']
    fileData: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    isTemplate: Union[_bool, 'types.BooleanWithAggregatesFilter']
    templateType: Union[_str, 'types.StringWithAggregatesFilter']
    category: Union[_str, 'types.StringWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedFileGroupByOutput(TypedDict, total=False):
    id: _int
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'
    isTemplate: _bool
    templateType: _str
    category: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'GeneratedFileSumAggregateOutput'
    _avg: 'GeneratedFileAvgAggregateOutput'
    _min: 'GeneratedFileMinAggregateOutput'
    _max: 'GeneratedFileMaxAggregateOutput'
    _count: 'GeneratedFileCountAggregateOutput'


class GeneratedFileAvgAggregateOutput(TypedDict, total=False):
    """GeneratedFile output for aggregating averages"""
    id: float


class GeneratedFileSumAggregateOutput(TypedDict, total=False):
    """GeneratedFile output for aggregating sums"""
    id: _int


class GeneratedFileScalarAggregateOutput(TypedDict, total=False):
    """GeneratedFile output including scalar fields"""
    id: _int
    filename: _str
    fileType: _str
    fileData: 'fields.Base64'
    isTemplate: _bool
    templateType: _str
    category: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


GeneratedFileMinAggregateOutput = GeneratedFileScalarAggregateOutput
GeneratedFileMaxAggregateOutput = GeneratedFileScalarAggregateOutput


class GeneratedFileMaxAggregateInput(TypedDict, total=False):
    """GeneratedFile input for aggregating by max"""
    id: bool
    filename: bool
    fileType: bool
    fileData: bool
    isTemplate: bool
    templateType: bool
    category: bool
    createdAt: bool
    updatedAt: bool


class GeneratedFileMinAggregateInput(TypedDict, total=False):
    """GeneratedFile input for aggregating by min"""
    id: bool
    filename: bool
    fileType: bool
    fileData: bool
    isTemplate: bool
    templateType: bool
    category: bool
    createdAt: bool
    updatedAt: bool


class GeneratedFileNumberAggregateInput(TypedDict, total=False):
    """GeneratedFile input for aggregating numbers"""
    id: bool


GeneratedFileAvgAggregateInput = GeneratedFileNumberAggregateInput
GeneratedFileSumAggregateInput = GeneratedFileNumberAggregateInput


GeneratedFileCountAggregateInput = TypedDict(
    'GeneratedFileCountAggregateInput',
    {
        'id': bool,
        'filename': bool,
        'fileType': bool,
        'fileData': bool,
        'isTemplate': bool,
        'templateType': bool,
        'category': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedFileCountAggregateOutput = TypedDict(
    'GeneratedFileCountAggregateOutput',
    {
        'id': int,
        'filename': int,
        'fileType': int,
        'fileData': int,
        'isTemplate': int,
        'templateType': int,
        'category': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedFileKeys = Literal[
    'id',
    'filename',
    'fileType',
    'fileData',
    'isTemplate',
    'templateType',
    'category',
    'createdAt',
    'updatedAt',
    'generatedExcels',
]
GeneratedFileScalarFieldKeys = Literal[
    'id',
    'filename',
    'fileType',
    'fileData',
    'isTemplate',
    'templateType',
    'category',
    'createdAt',
    'updatedAt',
]
GeneratedFileScalarFieldKeysT = TypeVar('GeneratedFileScalarFieldKeysT', bound=GeneratedFileScalarFieldKeys)

GeneratedFileRelationalFieldKeys = Literal[
        'generatedExcels',
    ]

# GeneratedExcel types

class GeneratedExcelOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the GeneratedExcel create method"""
    id: _int
    templateId: _int
    template: 'GeneratedFileCreateNestedWithoutRelationsInput'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedExcelCreateInput(GeneratedExcelOptionalCreateInput):
    """Required arguments to the GeneratedExcel create method"""
    userId: _str
    data: 'fields.Base64'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class GeneratedExcelOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the GeneratedExcel create method, without relations"""
    id: _int
    templateId: _int
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedExcelCreateWithoutRelationsInput(GeneratedExcelOptionalCreateWithoutRelationsInput):
    """Required arguments to the GeneratedExcel create method, without relations"""
    userId: _str
    data: 'fields.Base64'

class GeneratedExcelConnectOrCreateWithoutRelationsInput(TypedDict):
    create: 'GeneratedExcelCreateWithoutRelationsInput'
    where: 'GeneratedExcelWhereUniqueInput'

class GeneratedExcelCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedExcelCreateWithoutRelationsInput'
    connect: 'GeneratedExcelWhereUniqueInput'
    connect_or_create: 'GeneratedExcelConnectOrCreateWithoutRelationsInput'


class GeneratedExcelCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['GeneratedExcelCreateWithoutRelationsInput', List['GeneratedExcelCreateWithoutRelationsInput']]
    connect: Union['GeneratedExcelWhereUniqueInput', List['GeneratedExcelWhereUniqueInput']]
    connect_or_create: Union['GeneratedExcelConnectOrCreateWithoutRelationsInput', List['GeneratedExcelConnectOrCreateWithoutRelationsInput']]

_GeneratedExcelWhereUnique_id_Input = TypedDict(
    '_GeneratedExcelWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

GeneratedExcelWhereUniqueInput = _GeneratedExcelWhereUnique_id_Input


class GeneratedExcelUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicIntInput, _int]
    userId: _str
    template: 'GeneratedFileUpdateOneWithoutRelationsInput'
    data: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedExcelUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicIntInput, _int]
    userId: _str
    data: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class GeneratedExcelUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['GeneratedExcelCreateWithoutRelationsInput']
    connect: List['GeneratedExcelWhereUniqueInput']
    connect_or_create: List['GeneratedExcelConnectOrCreateWithoutRelationsInput']
    set: List['GeneratedExcelWhereUniqueInput']
    disconnect: List['GeneratedExcelWhereUniqueInput']
    delete: List['GeneratedExcelWhereUniqueInput']

    # TODO
    # update: List['GeneratedExcelUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['GeneratedExcelUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['GeneratedExcelScalarWhereInput']
    # upsert: List['GeneratedExcelUpserteWithWhereUniqueWithoutRelationsInput']


class GeneratedExcelUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'GeneratedExcelCreateWithoutRelationsInput'
    connect: 'GeneratedExcelWhereUniqueInput'
    connect_or_create: 'GeneratedExcelConnectOrCreateWithoutRelationsInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'GeneratedExcelUpdateInput'
    # upsert: 'GeneratedExcelUpsertWithoutRelationsInput'


class GeneratedExcelUpsertInput(TypedDict):
    create: 'GeneratedExcelCreateInput'
    update: 'GeneratedExcelUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_GeneratedExcel_id_OrderByInput = TypedDict(
    '_GeneratedExcel_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_userId_OrderByInput = TypedDict(
    '_GeneratedExcel_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_templateId_OrderByInput = TypedDict(
    '_GeneratedExcel_templateId_OrderByInput',
    {
        'templateId': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_data_OrderByInput = TypedDict(
    '_GeneratedExcel_data_OrderByInput',
    {
        'data': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_createdAt_OrderByInput = TypedDict(
    '_GeneratedExcel_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_updatedAt_OrderByInput = TypedDict(
    '_GeneratedExcel_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_RelevanceInner = TypedDict(
    '_GeneratedExcel_RelevanceInner',
    {
        'fields': 'List[GeneratedExcelScalarFieldKeys]',
        'search': 'str',
        'sort': 'SortOrder',
    },
    total=True
)

_GeneratedExcel_RelevanceOrderByInput = TypedDict(
    '_GeneratedExcel_RelevanceOrderByInput',
    {
        '_relevance': '_GeneratedExcel_RelevanceInner',
    },
    total=True
)

GeneratedExcelOrderByInput = Union[
    '_GeneratedExcel_id_OrderByInput',
    '_GeneratedExcel_userId_OrderByInput',
    '_GeneratedExcel_templateId_OrderByInput',
    '_GeneratedExcel_data_OrderByInput',
    '_GeneratedExcel_createdAt_OrderByInput',
    '_GeneratedExcel_updatedAt_OrderByInput',
    '_GeneratedExcel_RelevanceOrderByInput',
]



# recursive GeneratedExcel types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

GeneratedExcelRelationFilter = TypedDict(
    'GeneratedExcelRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class GeneratedExcelListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class GeneratedExcelInclude(TypedDict, total=False):
    """GeneratedExcel relational arguments"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedExcel']


    

class UserIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedExcelRecursive1']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedExcelRecursive1']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedExcelRecursive1']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedExcelRecursive1']


class UserIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedExcelRecursive2']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedExcelRecursive2']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedExcelRecursive2']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedExcelRecursive2']


class UserIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedExcelRecursive3']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedExcelRecursive3']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedExcelRecursive3']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedExcelRecursive3']


class UserIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    accounts: Union[bool, 'FindManyAccountArgsFromGeneratedExcelRecursive4']
    sessions: Union[bool, 'FindManySessionArgsFromGeneratedExcelRecursive4']
    Authenticator: Union[bool, 'FindManyAuthenticatorArgsFromGeneratedExcelRecursive4']
    configurations: Union[bool, 'FindManyConfigurationArgsFromGeneratedExcelRecursive4']


class UserIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class UserArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyUserArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class AccountIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive1']


class AccountIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive2']


class AccountIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive3']


class AccountIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive4']


class AccountIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class AccountArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AccountIncludeFromAccountRecursive1'


class AccountArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AccountIncludeFromAccountRecursive2'


class AccountArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AccountIncludeFromAccountRecursive3'


class AccountArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AccountIncludeFromAccountRecursive4'


class AccountArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyAccountArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive1'


class FindManyAccountArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive2'


class FindManyAccountArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive3'


class FindManyAccountArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    include: 'AccountIncludeFromAccountRecursive4'


class FindManyAccountArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AccountOrderByInput', List['AccountOrderByInput']]
    where: 'AccountWhereInput'
    cursor: 'AccountWhereUniqueInput'
    distinct: List['AccountScalarFieldKeys']
    
    

class SessionIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive1']


class SessionIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive2']


class SessionIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive3']


class SessionIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive4']


class SessionIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class SessionArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'SessionIncludeFromSessionRecursive1'


class SessionArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'SessionIncludeFromSessionRecursive2'


class SessionArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'SessionIncludeFromSessionRecursive3'


class SessionArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'SessionIncludeFromSessionRecursive4'


class SessionArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManySessionArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive1'


class FindManySessionArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive2'


class FindManySessionArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive3'


class FindManySessionArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    include: 'SessionIncludeFromSessionRecursive4'


class FindManySessionArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['SessionOrderByInput', List['SessionOrderByInput']]
    where: 'SessionWhereInput'
    cursor: 'SessionWhereUniqueInput'
    distinct: List['SessionScalarFieldKeys']
    
    

class VerificationTokenIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""


class VerificationTokenIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""


class VerificationTokenIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""


class VerificationTokenIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""


class VerificationTokenIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class VerificationTokenArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class VerificationTokenArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class VerificationTokenArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class VerificationTokenArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class VerificationTokenArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyVerificationTokenArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive1'


class FindManyVerificationTokenArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive2'


class FindManyVerificationTokenArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive3'


class FindManyVerificationTokenArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    include: 'VerificationTokenIncludeFromVerificationTokenRecursive4'


class FindManyVerificationTokenArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['VerificationTokenOrderByInput', List['VerificationTokenOrderByInput']]
    where: 'VerificationTokenWhereInput'
    cursor: 'VerificationTokenWhereUniqueInput'
    distinct: List['VerificationTokenScalarFieldKeys']
    
    

class AuthenticatorIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive1']


class AuthenticatorIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive2']


class AuthenticatorIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive3']


class AuthenticatorIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive4']


class AuthenticatorIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class AuthenticatorArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class AuthenticatorArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class AuthenticatorArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class AuthenticatorArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class AuthenticatorArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyAuthenticatorArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive1'


class FindManyAuthenticatorArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive2'


class FindManyAuthenticatorArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive3'


class FindManyAuthenticatorArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    include: 'AuthenticatorIncludeFromAuthenticatorRecursive4'


class FindManyAuthenticatorArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['AuthenticatorOrderByInput', List['AuthenticatorOrderByInput']]
    where: 'AuthenticatorWhereInput'
    cursor: 'AuthenticatorWhereUniqueInput'
    distinct: List['AuthenticatorScalarFieldKeys']
    
    

class ConfigurationIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive1']


class ConfigurationIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive2']


class ConfigurationIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive3']


class ConfigurationIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    user: Union[bool, 'UserArgsFromGeneratedExcelRecursive4']


class ConfigurationIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class ConfigurationArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class ConfigurationArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class ConfigurationArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class ConfigurationArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class ConfigurationArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyConfigurationArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive1'


class FindManyConfigurationArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive2'


class FindManyConfigurationArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive3'


class FindManyConfigurationArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    include: 'ConfigurationIncludeFromConfigurationRecursive4'


class FindManyConfigurationArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['ConfigurationOrderByInput', List['ConfigurationOrderByInput']]
    where: 'ConfigurationWhereInput'
    cursor: 'ConfigurationWhereUniqueInput'
    distinct: List['ConfigurationScalarFieldKeys']
    
    

class GeneratedFileIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedExcelRecursive1']


class GeneratedFileIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedExcelRecursive2']


class GeneratedFileIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedExcelRecursive3']


class GeneratedFileIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    generatedExcels: Union[bool, 'FindManyGeneratedExcelArgsFromGeneratedExcelRecursive4']


class GeneratedFileIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class GeneratedFileArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class GeneratedFileArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class GeneratedFileArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class GeneratedFileArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class GeneratedFileArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyGeneratedFileArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive1'


class FindManyGeneratedFileArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive2'


class FindManyGeneratedFileArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive3'


class FindManyGeneratedFileArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    include: 'GeneratedFileIncludeFromGeneratedFileRecursive4'


class FindManyGeneratedFileArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedFileOrderByInput', List['GeneratedFileOrderByInput']]
    where: 'GeneratedFileWhereInput'
    cursor: 'GeneratedFileWhereUniqueInput'
    distinct: List['GeneratedFileScalarFieldKeys']
    
    

class GeneratedExcelIncludeFromGeneratedExcel(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedExcelRecursive1']


class GeneratedExcelIncludeFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedExcelRecursive2']


class GeneratedExcelIncludeFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedExcelRecursive3']


class GeneratedExcelIncludeFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""
    template: Union[bool, 'GeneratedFileArgsFromGeneratedExcelRecursive4']


class GeneratedExcelIncludeFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Relational arguments for GeneratedExcel"""

    

class GeneratedExcelArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class GeneratedExcelArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class GeneratedExcelArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class GeneratedExcelArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class GeneratedExcelArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    
    

class FindManyGeneratedExcelArgsFromGeneratedExcel(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive1'


class FindManyGeneratedExcelArgsFromGeneratedExcelRecursive1(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive2'


class FindManyGeneratedExcelArgsFromGeneratedExcelRecursive2(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive3'


class FindManyGeneratedExcelArgsFromGeneratedExcelRecursive3(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    include: 'GeneratedExcelIncludeFromGeneratedExcelRecursive4'


class FindManyGeneratedExcelArgsFromGeneratedExcelRecursive4(TypedDict, total=False):
    """Arguments for GeneratedExcel"""
    take: int
    skip: int
    order_by: Union['GeneratedExcelOrderByInput', List['GeneratedExcelOrderByInput']]
    where: 'GeneratedExcelWhereInput'
    cursor: 'GeneratedExcelWhereUniqueInput'
    distinct: List['GeneratedExcelScalarFieldKeys']
    


FindManyGeneratedExcelArgs = FindManyGeneratedExcelArgsFromGeneratedExcel
FindFirstGeneratedExcelArgs = FindManyGeneratedExcelArgsFromGeneratedExcel


    

class GeneratedExcelWhereInput(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_str, 'types.StringFilter']
    templateId: Union[_int, 'types.IntFilter']
    template: 'GeneratedFileRelationFilter'
    data: Union['fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedExcelWhereInputRecursive1', List['GeneratedExcelWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['GeneratedExcelWhereInputRecursive1']
    OR: List['GeneratedExcelWhereInputRecursive1']
    NOT: List['GeneratedExcelWhereInputRecursive1']


class GeneratedExcelWhereInputRecursive1(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_str, 'types.StringFilter']
    templateId: Union[_int, 'types.IntFilter']
    template: 'GeneratedFileRelationFilter'
    data: Union['fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedExcelWhereInputRecursive2', List['GeneratedExcelWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['GeneratedExcelWhereInputRecursive2']
    OR: List['GeneratedExcelWhereInputRecursive2']
    NOT: List['GeneratedExcelWhereInputRecursive2']


class GeneratedExcelWhereInputRecursive2(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_str, 'types.StringFilter']
    templateId: Union[_int, 'types.IntFilter']
    template: 'GeneratedFileRelationFilter'
    data: Union['fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedExcelWhereInputRecursive3', List['GeneratedExcelWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['GeneratedExcelWhereInputRecursive3']
    OR: List['GeneratedExcelWhereInputRecursive3']
    NOT: List['GeneratedExcelWhereInputRecursive3']


class GeneratedExcelWhereInputRecursive3(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_str, 'types.StringFilter']
    templateId: Union[_int, 'types.IntFilter']
    template: 'GeneratedFileRelationFilter'
    data: Union['fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['GeneratedExcelWhereInputRecursive4', List['GeneratedExcelWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['GeneratedExcelWhereInputRecursive4']
    OR: List['GeneratedExcelWhereInputRecursive4']
    NOT: List['GeneratedExcelWhereInputRecursive4']


class GeneratedExcelWhereInputRecursive4(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntFilter']
    userId: Union[_str, 'types.StringFilter']
    templateId: Union[_int, 'types.IntFilter']
    template: 'GeneratedFileRelationFilter'
    data: Union['fields.Base64', 'types.BytesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate GeneratedExcel types


    

class GeneratedExcelScalarWhereWithAggregatesInput(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    templateId: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive1']
    OR: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive1']
    NOT: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive1']


class GeneratedExcelScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    templateId: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive2']
    OR: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive2']
    NOT: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive2']


class GeneratedExcelScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    templateId: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive3']
    OR: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive3']
    NOT: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive3']


class GeneratedExcelScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    templateId: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive4']
    OR: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive4']
    NOT: List['GeneratedExcelScalarWhereWithAggregatesInputRecursive4']


class GeneratedExcelScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """GeneratedExcel arguments for searching"""
    id: Union[_int, 'types.IntWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    templateId: Union[_int, 'types.IntWithAggregatesFilter']
    data: Union['fields.Base64', 'types.BytesWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class GeneratedExcelGroupByOutput(TypedDict, total=False):
    id: _int
    userId: _str
    templateId: _int
    data: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'GeneratedExcelSumAggregateOutput'
    _avg: 'GeneratedExcelAvgAggregateOutput'
    _min: 'GeneratedExcelMinAggregateOutput'
    _max: 'GeneratedExcelMaxAggregateOutput'
    _count: 'GeneratedExcelCountAggregateOutput'


class GeneratedExcelAvgAggregateOutput(TypedDict, total=False):
    """GeneratedExcel output for aggregating averages"""
    id: float
    templateId: float


class GeneratedExcelSumAggregateOutput(TypedDict, total=False):
    """GeneratedExcel output for aggregating sums"""
    id: _int
    templateId: _int


class GeneratedExcelScalarAggregateOutput(TypedDict, total=False):
    """GeneratedExcel output including scalar fields"""
    id: _int
    userId: _str
    templateId: _int
    data: 'fields.Base64'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


GeneratedExcelMinAggregateOutput = GeneratedExcelScalarAggregateOutput
GeneratedExcelMaxAggregateOutput = GeneratedExcelScalarAggregateOutput


class GeneratedExcelMaxAggregateInput(TypedDict, total=False):
    """GeneratedExcel input for aggregating by max"""
    id: bool
    userId: bool
    templateId: bool
    data: bool
    createdAt: bool
    updatedAt: bool


class GeneratedExcelMinAggregateInput(TypedDict, total=False):
    """GeneratedExcel input for aggregating by min"""
    id: bool
    userId: bool
    templateId: bool
    data: bool
    createdAt: bool
    updatedAt: bool


class GeneratedExcelNumberAggregateInput(TypedDict, total=False):
    """GeneratedExcel input for aggregating numbers"""
    id: bool
    templateId: bool


GeneratedExcelAvgAggregateInput = GeneratedExcelNumberAggregateInput
GeneratedExcelSumAggregateInput = GeneratedExcelNumberAggregateInput


GeneratedExcelCountAggregateInput = TypedDict(
    'GeneratedExcelCountAggregateInput',
    {
        'id': bool,
        'userId': bool,
        'templateId': bool,
        'data': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

GeneratedExcelCountAggregateOutput = TypedDict(
    'GeneratedExcelCountAggregateOutput',
    {
        'id': int,
        'userId': int,
        'templateId': int,
        'data': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


GeneratedExcelKeys = Literal[
    'id',
    'userId',
    'templateId',
    'template',
    'data',
    'createdAt',
    'updatedAt',
]
GeneratedExcelScalarFieldKeys = Literal[
    'id',
    'userId',
    'templateId',
    'data',
    'createdAt',
    'updatedAt',
]
GeneratedExcelScalarFieldKeysT = TypeVar('GeneratedExcelScalarFieldKeysT', bound=GeneratedExcelScalarFieldKeys)

GeneratedExcelRelationalFieldKeys = Literal[
        'template',
    ]



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields